<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jonas</title>
  
  <subtitle>热爱生活,追逐梦想</subtitle>
  <link href="http://www.laogou717.com/atom.xml" rel="self"/>
  
  <link href="http://www.laogou717.com/"/>
  <updated>2024-09-28T16:00:00.000Z</updated>
  <id>http://www.laogou717.com/</id>
  
  <author>
    <name>JonasTech</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>效率！效率！！还是TM的效率！！！</title>
    <link href="http://www.laogou717.com/2024/09/27/Github/vscode-md-diy/"/>
    <id>http://www.laogou717.com/2024/09/27/Github/vscode-md-diy/</id>
    <published>2024-09-26T16:00:00.000Z</published>
    <updated>2024-09-28T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Vscode自定义代码"><a href="#Vscode自定义代码" class="headerlink" title="Vscode自定义代码"></a>Vscode自定义代码</h2><div class="note blue simple"><p>我之所以更新慢的原因,跟这个静态博客脱不开关系,每次写<span class='p red'>Markdown</span>格式的时候,我总想着加一些有趣的小标签进去,但是老记不住那么多语法,所以想了个办法来解决这个问题 。</p></div><p>利用Vscode的<strong>代码自动补全功能</strong>，自定义一些常用“代码”片段，然后一劳永逸。</p><h3 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h3><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>高效</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>方便</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>容易上手</p>            </div><ul><li>简单介绍<br> 以往如果我在 <mark class="hl-label orange">.MD文件</mark> 中加入像 <mark class="hl-label red">文字块</mark> 这样的内容时，我就需要去到主题的 <mark class="hl-label blue">配置文档</mark>  中查看它的语法，然后复制、修改参数，才能正常使用。每次写文章都要<strong>东找西找</strong>的，效率低只是一方面，主要是太麻烦，人都是有惰性的 <img no-lazy class="inline" src="https://esimg.laogou717.com/i/2024/09/29/77c3uf.webp" style="height:40px;"/>。<br> 而自从我设置了<strong>自定义代码片段</strong>后，我感觉前所未有的舒畅，仿佛天都比以前蓝了。（我猜的，好几天没见太阳了）</li></ul><h3 id="案例展示"><a href="#案例展示" class="headerlink" title="案例展示"></a>案例展示</h3><h4 id="折叠菜单"><a href="#折叠菜单" class="headerlink" title="折叠菜单"></a>折叠菜单</h4><ul><li><p>我举个几个简单的例子来说明<br>  假设我现在要在下方加入一个<strong>折叠菜单</strong>，通常情况下需要这么写：</p><div class="tabs" id="text"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="text-1">代码</button><button type="button" class="tab " data-href="text-2">演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="text-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding cyan open, 折叠菜单 %&#125;</span><br><span class="line">    这是一个缩小的图片&#123;% inlineimage https://esimg.laogou717.com/i/2024/09/29/77c3uf.webp, height=60px %&#125;</span><br><span class="line">    &#123;% endfolding %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="text-2"><details class="folding-tag" cyan open><summary> 折叠菜单 </summary>              <div class='content'>              <p>这是一个缩小的图片<img no-lazy class="inline" src="https://esimg.laogou717.com/i/2024/09/29/77c3uf.webp" style="height:60px;"/></p>              </div>            </details></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><p>  但使用自定义代码片段后，我只需要在文件中输入我自己设置的 <strong>片段前缀</strong>系统就会自动显示设定的代码：<br>  <img src="https://esimg.laogou717.com/i/2024/09/29/8o3q1j.webp" alt="自定义代码片段1"></p><p>  然后按下键盘上的 <kbd>TAB</kbd> 或 <kbd>Enter</kbd>，就能直接调用配置的代码，并且光标自动定位到我设置的地方或自动选中某些文字。</p><p>  <img src="https://esimg.laogou717.com/i/2024/09/29/8oqgry.webp" alt="Vscode快捷输入"></p></li></ul><h4 id="yaml头部元数据"><a href="#yaml头部元数据" class="headerlink" title="yaml头部元数据"></a>yaml头部元数据</h4><p>相信各位使用静态博客的朋友都对下面这种<code>yaml</code>格式的<strong>元数据</strong>不陌生吧。<br>其中有些<strong>字段</strong>我们每次更新都需要进行配置，不然博客框架就无法正常生成<strong>静态文件</strong>。<br>比如本篇文章的配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 效率！效率！！还是TM的效率！！！</span><br><span class="line">description: 一旦尝试了Vscode自定义代码片段,你会发现以前写文章像是原始人一样!通过对Md文档的某些字段进行指定来快速调用,事半功倍!</span><br><span class="line">date: 2024-09-27</span><br><span class="line">cover: https://esimg.laogou717.com/i/2024/09/28/hxlmb.webp</span><br><span class="line">tags: [AI,开源项目,效率,写作]</span><br><span class="line">keywords: [AI,开源项目,效率,写作]</span><br><span class="line">categories: AI纪元</span><br><span class="line">main_color: #0a0c1c</span><br><span class="line">updated: 2024-09-29</span><br><span class="line">ai: </span><br><span class="line">- </span><br><span class="line">---</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>你会发现很多内容都是可以重复利用的。而不用每次都重新输入或复制粘贴。<br>为此，我在<strong>自定义代码</strong>中写了两个版本的元数据配置，一个用来发布 <mark class="hl-label blue">AI纪元</mark>  系列内容，另一个用来发布我的个人 <mark class="hl-label green">日记</mark> 。</p><div class="tabs" id="text"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="text-1">AI纪元</button><button type="button" class="tab " data-href="text-2">日记</button></ul><div class="tab-contents"><div class="tab-item-content active" id="text-1"><details class="folding-tag" ><summary> 点击展开 </summary>              <div class='content'>              <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&quot;AI纪元头部&quot;: &#123;</span><br><span class="line">&quot;prefix&quot;: &quot;aitop&quot;,</span><br><span class="line">&quot;body&quot;: [</span><br><span class="line">&quot;---&quot;,</span><br><span class="line">&quot;title: 【必需】文章标题&quot;,</span><br><span class="line">&quot;description: 【可选】文章描述&quot;,</span><br><span class="line">&quot;date: $&#123;CURRENT_YEAR&#125;-$&#123;CURRENT_MONTH&#125;-$&#123;CURRENT_DATE&#125;&quot;,</span><br><span class="line">&quot;cover: $&#123;CLIPBOARD/(http)(:\\\\/\\\\/[^\\\\s)]+)/https$2/&#125;&quot;,</span><br><span class="line">&quot;tags: [AI,开源项目]&quot;,</span><br><span class="line">&quot;keywords: &quot;,</span><br><span class="line">&quot;categories: AI纪元&quot;,</span><br><span class="line">&quot;main_color: &quot;,</span><br><span class="line">&quot;---&quot;</span><br><span class="line">],</span><br><span class="line">&quot;description&quot;: &quot;AI纪元专用代码&quot;</span><br></pre></td></tr></table></figure>              </div>            </details><ul><li>说明<ul><li>通过<code>${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}</code>自动获取发布当日的日期时间</li><li>通过<code>$CLIPBOARD</code>自动获取<strong>粘贴板</strong>中的内容并填入封面字段中</li><li>加入<code>${CLIPBOARD/(http)(:\\\\/\\\\/[^\\\\s)]+)/https$2/}</code>正则表达式把<strong>http</strong>处理为<strong>https</strong><br><strong>这样我只需要输入“aitop”就可以直接生成带封面、日期的元数据</strong> <img no-lazy class="inline" src="https://esimg.laogou717.com/i/2024/09/29/admmr0.webp" style="height:40px;"/></li></ul></li></ul></div><div class="tab-item-content" id="text-2"><details class="folding-tag" ><summary> 点击展开 </summary>              <div class='content'>              <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&quot;日记&quot;: &#123;</span><br><span class="line">&quot;prefix&quot;: &quot;top&quot;,</span><br><span class="line">&quot;body&quot;: [</span><br><span class="line">&quot;---&quot;,</span><br><span class="line">&quot;title: $&#123;CURRENT_MONTH&#125;月$&#123;CURRENT_DATE&#125;日记&quot;,</span><br><span class="line">&quot;date: $&#123;CURRENT_YEAR&#125;-$&#123;CURRENT_MONTH&#125;-$&#123;CURRENT_DATE&#125;&quot;,</span><br><span class="line">&quot;categories:  日记&quot;,</span><br><span class="line">&quot;keywords: [神烦老狗,日记,生活感悟]&quot;,</span><br><span class="line">&quot;description: $&#123;CURRENT_YEAR&#125;年$&#123;CURRENT_MONTH&#125;月$&#123;CURRENT_DATE&#125;日生活记录&quot;,</span><br><span class="line">&quot;cover: https://esimg.laogou717.com/i/2024/09/26/r88udl.webp&quot;,</span><br><span class="line">&quot;main_color: #000000&quot;,</span><br><span class="line">&quot;---&quot;</span><br><span class="line">],</span><br><span class="line">&quot;description&quot;: &quot;博客日记头部部分&quot;</span><br></pre></td></tr></table></figure>              </div>            </details><p><strong>这个没什么可说的，我的日记默认都是以日期开头，固定的封面。</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div>    <h4 id="文章更新日期"><a href="#文章更新日期" class="headerlink" title="文章更新日期"></a>文章更新日期</h4><p><strong>我讨厌手动输入日期时间</strong>，所以自定义了<code>updated: $&#123;CURRENT_YEAR&#125;-$&#123;CURRENT_MONTH&#125;-$&#123;CURRENT_DATE&#125;</code>字段，这样当我去更改一些旧文时，直接在文章头部输入简写 <kbd>U</kbd>  <kbd>D</kbd> 并按下<strong>回车</strong>，就能自动填入当日的日期。</p><div class="gallery">  <div class="fj-gallery page_img_lazyload lazyload btn_album_detail_lazyload data" data-rowHeight="220" data-limit="2">    <span class="gallery-data">[{"url":"https://esimg.laogou717.com/i/2024/09/29/amtsyz.webp","alt":"输入前缀使用1"},{"url":"https://esimg.laogou717.com/i/2024/09/29/amyjz1.webp","alt":"输入前缀使用2"}]</span>  </div><button class="gallery-load-more" style="opacity:0">  <span>加载更多</span>  <i class="anzhiyufont anzhiyu-icon-arrow-down"></i>  </button></div><p>这样一些支持显示<strong>文章更新时间</strong>的博客主题就会出现这样的提示，非常人性化<img no-lazy class="inline" src="https://esimg.laogou717.com/i/2024/09/29/aut64s.webp" style="height:40px;"/>。</p><div class="gallery">  <div class="fj-gallery page_img_lazyload lazyload btn_album_detail_lazyload data" data-rowHeight="220" data-limit="2">    <span class="gallery-data">[{"url":"https://esimg.laogou717.com/i/2024/09/29/aou71i.webp","alt":"文章更新时间"}]</span>  </div><button class="gallery-load-more" style="opacity:0">  <span>加载更多</span>  <i class="anzhiyufont anzhiyu-icon-arrow-down"></i>  </button></div><h2 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h2><h3 id="VSCode-设置"><a href="#VSCode-设置" class="headerlink" title="VSCode 设置"></a>VSCode 设置</h3><ul><li><p>基础设置<br>  首先需要在<strong>vscode</strong>中找到关于<strong>自定义代码</strong>的设置。你可以在窗口的左下角，点击设置按钮找到代码片段选项。</p>  <div class="gallery">  <div class="fj-gallery page_img_lazyload lazyload btn_album_detail_lazyload data" data-rowHeight="220" data-limit="1">    <span class="gallery-data">[{"url":"https://esimg.laogou717.com/i/2024/09/29/bmsw6f.webp","alt":"vscode设置"}]</span>  </div><button class="gallery-load-more" style="opacity:0">  <span>加载更多</span>  <i class="anzhiyufont anzhiyu-icon-arrow-down"></i>  </button></div><p>  点击后<strong>Vscode</strong>的搜索框会被唤醒。接着我们直接搜索<strong>Markdown</strong>，找到一个名为<strong>markdown.json</strong>的文件。</p>  <div class="gallery">  <div class="fj-gallery page_img_lazyload lazyload btn_album_detail_lazyload data" data-rowHeight="220" data-limit="2">    <span class="gallery-data">[{"url":"https://esimg.laogou717.com/i/2024/09/29/boeisr.webp","alt":"vscode搜索框"},{"url":"https://esimg.laogou717.com/i/2024/09/29/bp8wjv.webp","alt":"搜索markdown.json"}]</span>  </div><button class="gallery-load-more" style="opacity:0">  <span>加载更多</span>  <i class="anzhiyufont anzhiyu-icon-arrow-down"></i>  </button></div><p>  进入 <code>markdown.json</code> 文件后，即可开始编辑自定义代码片段。这个文件中的配置只在 Markdown 文件中生效，不会影响其他语言的输入。</p>  <div class="note red anzhiyufont anzhiyu-icon-bullhorn simple"><p>如果想全局生效，可以选择 “New Global Snippets file”（创建全局代码片段）。</p></div><p>  以下是进入编辑器后的设置示例👇</p>  <div class="gallery">  <div class="fj-gallery page_img_lazyload lazyload btn_album_detail_lazyload data" data-rowHeight="220" data-limit="2">    <span class="gallery-data">[{"url":"https://esimg.laogou717.com/i/2024/09/29/bxxmjr.webp","alt":"进入markdown.json"}]</span>  </div><button class="gallery-load-more" style="opacity:0">  <span>加载更多</span>  <i class="anzhiyufont anzhiyu-icon-arrow-down"></i>  </button></div></li></ul><details class="folding-tag" ><summary> 基本语法解释（非必读） </summary>              <div class='content'>              <ul><li>基本语法<br>VS Code 的自定义代码片段是通过 <code>.code-snippets</code> 文件编写的，可以存放在用户全局配置目录或特定项目中。基本语法如下：</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;代码片段名称&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;触发前缀&quot;</span><span class="punctuation">,</span>  <span class="comment">// 输入的前缀，用于触发代码片段</span></span><br><span class="line">    <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;代码的第一行&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;代码的第二行，可以使用占位符：$&#123;1:默认值&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;多行内容可用数组表示，每行一个元素&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;对该代码片段的描述&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ul><li><p>语法说明</p><ul><li><strong>prefix</strong>: 用于触发代码片段的关键词，输入后会唤醒<strong>代码自动补全</strong>功能。</li><li><strong>body</strong>: 代码片段的内容，支持多行和占位符。占位符可以使用 <code>${1:默认值}</code>，其中 <code>1</code> 是占位符的索引，<code>默认值</code> 是提示的默认内容。</li><li><strong>description</strong>: 对代码片段的描述，解释其用途。</li></ul></li><li><p>示例<br>创建一个简单的 HTML 模板：</p></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;HTML模板&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;html-template&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;&lt;!DOCTYPE html&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;&lt;html lang=\&quot;en\&quot;&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;&lt;head&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;    &lt;meta charset=\&quot;UTF-8\&quot;&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;    &lt;meta name=\&quot;viewport\&quot; content=\&quot;width=device-width, initial-scale=1.0\&quot;&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;    &lt;title&gt;$&#123;1:Document&#125;&lt;/title&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;&lt;/head&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;&lt;body&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;    $&#123;2:&lt;!-- 内容放在这里 --&gt;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;&lt;/body&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;&lt;/html&gt;&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;一个简单的 HTML 页面模板&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>示例解读<ul><li><strong>prefix</strong>: <code>html-template</code>，当输入这个前缀或简写时，VS Code 会提示插入该代码片段。</li><li><strong>body</strong>: HTML 模板的内容，包含了占位符 <code>${1:Document}</code> 和 <code>${2:&lt;!-- 内容放在这里 --&gt;}</code>，用于快速修改标题和内容。</li><li><strong>description</strong>: 简要说明了代码片段的用途，方便选择。</li></ul></li></ul>              </div>            </details><h3 id="一键生成自定义代码"><a href="#一键生成自定义代码" class="headerlink" title="一键生成自定义代码"></a>一键生成自定义代码</h3><img no-lazy class="inline" src="https://esimg.laogou717.com/i/2024/09/29/c7pke9.webp" style="height:40px;"/> <span style="font-size:200%;">如果</span>你并不想自己编写这破玩意儿，那么你可以试试我做的这个 <b>自定义代码生成器</b> 👇<p><img src="https://esimg.laogou717.com/i/2024/09/29/71tvti.webp" alt="Vscode自定义代码工具"><br> <span class='p center logo large'>Vscode自定义代码片段</span><br> <span class='p center small'>在vscode配置常用的代码，并且提供唤醒前缀，只需输入一次。</span><br> <div class="site-card-group"><a class="site-card" href="https://mdcode.laogou717.com" data-title=Vscode自定义代码工具><div class="wrapper cover"><img class="cover fadeIn" src="https://esimg.laogou717.com/i/2024/09/29/71tvti.webp"/></div><div class="info"><img class="flink-avatar" src=" https://mdcode.laogou717.com/favicon.ico"/><span class="site-title">mdcode</span></div></a></div></p><p>界面很干净简洁 <span style="font-size:80%;">（高情商）</span>,但到底怎么写下面的信息呢？<br><strong>如果你有这个问题，</strong>不要怀疑，应该是我前面废话太多了，没讲清楚，我们<strong>一步一步</strong>来看。<br><span style="font-color:black;">把需要<b>偷懒、重复</b>的内容填入下面的”内容区域”</span><br><img src="https://esimg.laogou717.com/i/2024/09/29/cifqpq.webp" alt="Vscode自定义代码工具首页"></p><p>比如我希望每篇博文下方我都加入一个 <span class='p red'>互联网要饭环节</span><br>那么我就在内容区输入我准备好的内容：“<strong>V我50～啊～V我50～</strong>”。<br><img src="https://esimg.laogou717.com/i/2024/09/29/dbxz7o.webp" alt="V我50"></p><div class="tip bolt"><p>触发字段最好设置英文，要是你不怕输入的时候麻烦，硬用中文当前缀Vscode倒是也能支持。</p></div><ul><li>生成配置<br>  输入完毕后，点击生成按钮会出现一个弹窗，直接点弹窗里的复制。然后粘贴到我们的<code>markdown.json</code>文件中去（大括号的中间）。<br>  然后按下<code>ctrl</code>+<code>s</code>保存文件。</li></ul><div class="gallery">  <div class="fj-gallery page_img_lazyload lazyload btn_album_detail_lazyload data" data-rowHeight="220" data-limit="2">    <span class="gallery-data">[{"url":"https://esimg.laogou717.com/i/2024/09/29/djxtxp.webp","alt":"生成V我50代码"},{"url":"https://esimg.laogou717.com/i/2024/09/29/dlg0w4.webp","alt":"编辑markdown.json"}]</span>  </div><button class="gallery-load-more" style="opacity:0">  <span>加载更多</span>  <i class="anzhiyufont anzhiyu-icon-arrow-down"></i>  </button></div><p>接着随便创建一个<code>.md</code>文件，在其中输入：刚刚设置的“<strong>触发前缀</strong>”，看看是否会出现自动补全的提示。</p><div class="gallery">  <div class="fj-gallery page_img_lazyload lazyload btn_album_detail_lazyload data" data-rowHeight="220" data-limit="2">    <span class="gallery-data">[{"url":"http://esimg.laogou717.com/i/2024/09/29/do0qke.webp","alt":"vscode触发前缀"}]</span>  </div><button class="gallery-load-more" style="opacity:0">  <span>加载更多</span>  <i class="anzhiyufont anzhiyu-icon-arrow-down"></i>  </button></div><p>如果成功就<strong>万事大吉🎉</strong>，接下来你只需要寻按照自己需要添加，或者把你的需求告诉chatgpt，直接让它帮你写。<br>如果失败就<strong>也没关系😄</strong>，你只需要复制这段代码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&quot;[markdown]&quot;: &#123;</span><br><span class="line">    &quot;editor.quickSuggestions&quot;: &#123;</span><br><span class="line">        &quot;comments&quot;: &quot;on&quot;,</span><br><span class="line">        &quot;strings&quot;: &quot;on&quot;,</span><br><span class="line">        &quot;other&quot;: &quot;on&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;diffEditor.ignoreTrimWhitespace&quot;: true</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后在重新点击左下角的设置按钮，点击<strong>设置</strong>，在设置页面的右上角打开配置文件，跟上面写自定义代码一样，直接<strong>滑到底部</strong>粘贴进大括号里保存就可以正常识别了。</p><div class="gallery">  <div class="fj-gallery page_img_lazyload lazyload btn_album_detail_lazyload data" data-rowHeight="220" data-limit="2">    <span class="gallery-data">[{"url":"https://esimg.laogou717.com/i/2024/09/29/dwzsz8.webp","alt":"vscode设置"},{"url":"https://esimg.laogou717.com/i/2024/09/29/dxwjqu.webp","alt":"vscode设置面板"},{"url":"https://esimg.laogou717.com/i/2024/09/29/e1rztu.webp","alt":"vscode配置页面"},{"url":"https://esimg.laogou717.com/i/2024/09/29/e2dy9i.webp","alt":"vscode配置页面2"}]</span>  </div><button class="gallery-load-more" style="opacity:0">  <span>加载更多</span>  <i class="anzhiyufont anzhiyu-icon-arrow-down"></i>  </button></div><h2 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h2><h3 id="元数据的配置"><a href="#元数据的配置" class="headerlink" title="元数据的配置"></a>元数据的配置</h3><p>由于我们不是配置全局页面的代码补全，所以会导致你在<code>markdown.json</code>中配置的字段，在头部<code>---</code>的包围之中无法唤出自动补全。</p><ul><li>要么直接全局配置，要么就把头部的代码，全部放到<code>yaml.json</code>中配置。格式都是一样的。</li><li><div class="gallery">  <div class="fj-gallery page_img_lazyload lazyload btn_album_detail_lazyload data" data-rowHeight="220" data-limit="2">    <span class="gallery-data">[{"url":"https://esimg.laogou717.com/i/2024/09/29/ewgb35.webp","alt":"yaml.json文件配置"}]</span>  </div><button class="gallery-load-more" style="opacity:0">  <span>加载更多</span>  <i class="anzhiyufont anzhiyu-icon-arrow-down"></i>  </button></div></li></ul>]]></content>
    
    
    <summary type="html">一旦尝试了Vscode自定义代码片段,你会发现以前写文章像是原始人一样!通过对Md文档的某些字段进行指定来快速调用,事半功倍!</summary>
    
    
    
    <category term="AI纪元" scheme="http://www.laogou717.com/categories/AI%E7%BA%AA%E5%85%83/"/>
    
    
    <category term="开源项目" scheme="http://www.laogou717.com/tags/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="AI" scheme="http://www.laogou717.com/tags/AI/"/>
    
    <category term="效率" scheme="http://www.laogou717.com/tags/%E6%95%88%E7%8E%87/"/>
    
    <category term="写作" scheme="http://www.laogou717.com/tags/%E5%86%99%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>无限试用会员!GPT4、Claude3.5免费用！</title>
    <link href="http://www.laogou717.com/2024/08/23/AI%20era/cursor/"/>
    <id>http://www.laogou717.com/2024/08/23/AI%20era/cursor/</id>
    <published>2024-08-23T07:30:00.000Z</published>
    <updated>2024-09-29T05:36:31.497Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img.laogou717.com/file/b23a2b15ecf4255420686.gif" alt="快速"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p><strong>Cursor</strong> 是一个编程软件,就像<strong>Vscode</strong>一样,可以让你轻松地编写、调试和运行代码。不一样的是它内置了<strong>8个热门AI模型</strong>,什么<strong>GPT4、Claude3</strong>最新模型,都能免费试用<strong>14天</strong>,我们只需要任意邮箱注册账号,然后下载程序即可。</p></blockquote><p><img src="https://img.laogou717.com/file/20c3cd4a499d2f86ca10a.png" alt="计划"></p><h2 id="具体用法"><a href="#具体用法" class="headerlink" title="具体用法"></a>具体用法</h2><h3 id="下载程序"><a href="#下载程序" class="headerlink" title="下载程序"></a>下载程序</h3><p>进入<a href="https://www.cursor.com/">Cursor官网</a>,在右上角点击<strong>下载并安装</strong><br><img src="https://img.laogou717.com/file/bdf38263c1424b392a32a.png" alt="下载"></p><h3 id="登陆授权"><a href="#登陆授权" class="headerlink" title="登陆授权"></a>登陆授权</h3><p>安装后打开软件,点击右上角的<strong>设置按钮</strong><br><img src="https://img.laogou717.com/file/ad6c824e9a019c29b2d1a.png" alt="设置"><br>然后点击<strong>登陆</strong>,不出意外应该会弹出<strong>授权</strong>窗口<br><img src="https://img.laogou717.com/file/b0a7d23fedbaab5bf1f9d.png" alt="登陆"><br><img src="https://img.laogou717.com/file/b2b1c019088ac81823919.png" alt="登陆注册"><br>可以选择用<strong>GitHub</strong>或<strong>Google</strong>账号进行登陆,也可以直接点击注册,输入邮箱进行注册登陆,我这里以<strong>网易邮箱</strong>举例<br><img src="https://img.laogou717.com/file/c3c9fe8d336289279ecf0.png" alt="注册"><br>这里有概率<strong>提示验证失败</strong>,可以<strong>重试</strong>一般就会提示我们填入“<strong>邮箱验证码</strong>”<br><img src="https://img.laogou717.com/file/9d5a1d10e3e465b5cddeb.png" alt="邮箱"><br>填入验证码进入下一步后,询问我们是否允许打开<strong>Cursor</strong>软件,这里<strong>点允许</strong><br><img src="https://img.laogou717.com/file/f235357928178729a0470.png" alt="允许授权"><br>允许后就我们的软件后台就会显示这样的页面,如果<strong>没有显示</strong>就重新再点一次登陆进行重新授权<br><img src="https://img.laogou717.com/file/fcb716804e90d379f81d2.png" alt="账号"></p><h3 id="查看支持的模型"><a href="#查看支持的模型" class="headerlink" title="查看支持的模型"></a>查看支持的模型</h3><p>点击左侧的<strong>Models</strong>,可以看到支持的模型,勾选的模型就是我们可以使用的模型<br><img src="https://img.laogou717.com/file/25ee64b9c116a6bbf7aed.png" alt="Models"></p><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>点击右上角的<strong>分屏图标</strong><br><img src="https://img.laogou717.com/file/f2042e91a3c1ceba06268.png" alt="使用"><br>这时我们看到了一个<strong>分屏</strong>窗口,在这里可以直接与AI进行沟通<br><img src="https://img.laogou717.com/file/55c01c064049c9357a313.png" alt="聊天"></p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul><li><a href="https://www.cursor.com/">Cursor官网</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://img.laogou717.com/file/b23a2b15ecf4255420686.gif&quot; alt=&quot;快速&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="AI纪元" scheme="http://www.laogou717.com/categories/AI%E7%BA%AA%E5%85%83/"/>
    
    
    <category term="GPT4" scheme="http://www.laogou717.com/tags/GPT4/"/>
    
    <category term="Claude3.5" scheme="http://www.laogou717.com/tags/Claude3-5/"/>
    
    <category term="Cursor" scheme="http://www.laogou717.com/tags/Cursor/"/>
    
    <category term="14天Pro计划" scheme="http://www.laogou717.com/tags/14%E5%A4%A9Pro%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>Midjourney 网页版全面开放，免费试用！</title>
    <link href="http://www.laogou717.com/2024/08/23/AI%20era/Midjourney/mjprompt/"/>
    <id>http://www.laogou717.com/2024/08/23/AI%20era/Midjourney/mjprompt/</id>
    <published>2024-08-23T07:30:00.000Z</published>
    <updated>2024-09-26T08:44:57.003Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><blockquote><p><a href="https://www.midjourney.com/imagine">Midjourney</a> 网页版终于向<strong>所有用户开放</strong>，无需再通过候补计划。为了吸引更多用户体验他们的图像生成功能，Midjourney 推出了限时的<strong>免费试用计划</strong>。所有用户都可以免费生成多达100张AI图片。</p></blockquote><p>当然，为了帮助各位更好地<strong>利用 Midjourney</strong>，我为你整理了一些<strong>提示词编写的技巧</strong>，以及几个适合<strong>生成电影感图像</strong>的提示词示例。</p><h3 id="提示词编写技巧："><a href="#提示词编写技巧：" class="headerlink" title="提示词编写技巧："></a>提示词编写技巧：</h3><p><img src="https://img.laogou717.com/file/f10922502693a83d57ca4.png"></p><ol><li><p><strong>明确主题和细节</strong>：在提示词中包含<strong>清晰的主题</strong>和<strong>详细描述</strong>。例如，不仅仅是说“生成一个风景图”，而是具体描述为“生成一个夕阳下的森林场景，有光线透过树叶，地面覆盖着金黄色的落叶”。这种细致的描述可以帮助 Midjourney 更准确地理解你的意图。</p></li><li><p><strong>指定风格或摄影效果</strong>：在提示词中加入<strong>特定的艺术风格</strong>或<strong>摄影师的名字</strong>，可以获得更具艺术感的图像。例如，“拍摄一个在公园长椅上坐着的女人，风格为乔尔·梅耶罗维茨”。</p></li><li><p><strong>设定光线和环境</strong>：光线和环境对图像的最终效果有很大影响。你可以在提示词中指定<strong>光照条件</strong>，比如“在晨光中的大海景观，带有淡淡的雾气”和“阴天的城市街道，灯光昏暗”。</p></li><li><p><strong>利用参考案例</strong>：可以参考一些成功的提示词案例，并在此基础上提出自己的要求。例如，如果你看到某个提示词效果很好，可以在此基础上进行<strong>微调</strong>，如更改角度或添加新的元素。</p></li><li><p><strong>注意禁用词汇</strong>：避免使用 Midjourney 的<strong>禁用词汇</strong>，例如与暴力、色情、敏感话题相关的词汇，这样可以避免生成不符合要求或无法生成的图像。</p></li><li><p><strong>使用控制词条</strong>：在提示词中使用<strong>专门的控制词条</strong>可以帮助你更精确地定义生成图像的风格和内容。例如，<code>-v</code> 选择 Midjourney 的版本，<code>-ar</code> 设置图像的宽高比，<code>-s</code> 控制图像的风格化程度，<code>-chaos</code> 增加图像的随机性，<code>-no</code> 排除某些元素。</p></li></ol><h3 id="电影感提示词示例："><a href="#电影感提示词示例：" class="headerlink" title="电影感提示词示例："></a>电影感提示词示例：</h3><ol><li><strong>科幻</strong>：<code>&quot;A futuristic cityscape at night, neon lights, flying cars -v 5 -ar 16:9&quot;</code></li></ol><p><img src="https://img.laogou717.com/file/42b671945764b886f470f.png" alt="科幻"><br>2. <strong>黑色电影</strong>：<code>&quot;A shadowy alleyway, dim streetlights, noir film style -s 800&quot;</code></p><p><img src="https://img.laogou717.com/file/ec3ec0b56d287bfd92730.png" alt="黑色电影"><br>3. <strong>史诗奇幻</strong>：<code>&quot;A towering castle on a misty mountain, full moon, dark fantasy art -q 2&quot;</code></p><p><img src="https://img.laogou717.com/file/27be5618e5c5f4f5f9a4b.png" alt="史诗奇幻"></p><h3 id="关于悟空的提示词："><a href="#关于悟空的提示词：" class="headerlink" title="关于悟空的提示词："></a>关于悟空的提示词：</h3><p>在深入探讨提示词编写技巧时，我和ChatGPT也扯皮了一会,如何结合孙悟空的形象特点来生成具备写实电影感的图像。以下是一个示例提示词，说是可以生成一个具有压迫感和暗黑风格的孙悟空形象：</p><p><strong>提示词示例</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sun Wukong, the legendary Monkey King, depicted in a dark, cinematic, and photorealistic style. His fierce, golden eyes shine with an eerie glow against his shadowy, fur-covered face. The scene is illuminated with dramatic low-key lighting, emphasizing the textures of his hair and the cold, metallic sheen of his magical staff, Ruyi Jingu Bang. The setting features deep shadows and stark contrasts, with light seeping through in narrow beams, creating a mysterious and ominous atmosphere. The camera angle is a low shot, enhancing his intimidating presence, while the background is shrouded in darkness, only faintly lit to suggest an otherworldly environment.</span><br></pre></td></tr></table></figure><div class="gallery">  <div class="fj-gallery page_img_lazyload lazyload btn_album_detail_lazyload data" data-rowHeight="220" data-limit="2">    <span class="gallery-data">[{"url":"https://img.laogou717.com/file/611d0a65c44dbe81b07c9.png","alt":""},{"url":"https://img.laogou717.com/file/a44bcbae91cd3ad0a8800.png","alt":""},{"url":"https://img.laogou717.com/file/e4cedfc5036632bb54d69.png","alt":""},{"url":"https://img.laogou717.com/file/245bded4f15a6660a7634.png","alt":""}]</span>  </div><button class="gallery-load-more" style="opacity:0">  <span>加载更多</span>  <i class="anzhiyufont anzhiyu-icon-arrow-down"></i>  </button></div><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p><strong>提示词技巧</strong>：</p><ul><li><strong>明确主题和细节</strong>：清晰描述你想要的图像。</li><li><strong>指定风格或摄影效果</strong>：加入特定风格或艺术家的名字。</li><li><strong>设定光线和环境</strong>：控制图像的光照条件和环境。</li><li><strong>利用参考案例</strong>：在成功案例的基础上进行微调。</li><li><strong>注意禁用词汇</strong>：避免使用敏感词汇。</li><li><strong>使用控制词条</strong>：精确定义图像风格和内容。</li></ul><p><strong>链接</strong>: <a href="https://www.midjourney.com/imagine">Midjourney 官方网站</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a</summary>
        
      
    
    
    
    <category term="AI纪元" scheme="http://www.laogou717.com/categories/AI%E7%BA%AA%E5%85%83/"/>
    
    
    <category term="AI绘画" scheme="http://www.laogou717.com/tags/AI%E7%BB%98%E7%94%BB/"/>
    
    <category term="Midjourney" scheme="http://www.laogou717.com/tags/Midjourney/"/>
    
    <category term="免费" scheme="http://www.laogou717.com/tags/%E5%85%8D%E8%B4%B9/"/>
    
    <category term="提示词" scheme="http://www.laogou717.com/tags/%E6%8F%90%E7%A4%BA%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>8月6日记</title>
    <link href="http://www.laogou717.com/2024/08/06/notes/8%E6%9C%886%E6%97%A5%E8%AE%B0/"/>
    <id>http://www.laogou717.com/2024/08/06/notes/8%E6%9C%886%E6%97%A5%E8%AE%B0/</id>
    <published>2024-08-06T02:07:42.152Z</published>
    <updated>2024-09-27T08:35:24.337Z</updated>
    
    <content type="html"><![CDATA[<h1 id="臭鸡蛋和排骨汤"><a href="#臭鸡蛋和排骨汤" class="headerlink" title="臭鸡蛋和排骨汤"></a>臭鸡蛋和排骨汤</h1><p>“<strong>再来一次我就要把锅扔了</strong>。”</p><p>听完女朋友这句话,我艰难思索片刻给出了我将后悔一天的馊主意:</p><p>“<strong>快接点水稀释一下,现在太烫了直接到垃圾桶里会把塑料袋弄化的。</strong>”</p><p>昨晚晚上七点左右,我问 小卡 ,要不要现在去做点东西吃。而回答我的是一连串的摇头动作,那没办法我只得去冰箱拿了个鸡爪啃,然后回到电脑前继续刷视频。约莫着过了十分钟,我的桌子上多了五六个被啃完的鸡爪残片,和一罐空掉的碳酸饮料瓶,低头看了肚子,“嘿”放古代怎么着也得是个百夫长吧 。</p><p>就在我欣赏自己的将军肚发出感慨时,厨房传来了一阵噼里啪啦的碰撞声,夹杂着一声怪叫,摸着肚子的手微微一顿,赶紧跑过去问她发生什么事了,就看到她端着锅一步一步向我靠近。</p><p>我看到锅里是一个还没有做熟的饼,而在饼的上方有个黑洞洞的物体浮动着,没看错的话,那应该是一个坏掉的鸡蛋。</p><p>我就站着厨房门口,啃着鸡爪看着她往锅里接水稀释。显然我没有对付臭鸡蛋的经验,也不知道加入水的臭鸡蛋会完成最终进化。</p><p>在加水的过程中我注意到,那个没熟的饼和黑色的蛋黄在以一种奇异的速度快速融合,水的形态、颜色也在慢慢发生变化,它从无色慢慢变成了乳白色。隐约中我仿佛看到了一股黑烟朝我站立的地方袭来,那瞬间让脑海中浮现出了我中午刚喝的那碗排骨汤,足足炖了<strong>两个半小时</strong>,味道鲜美,骨汤浓郁….</p><p>思绪即将飘远之际,那股看不见的气体像燃烧的乒乓球一样,借着水能量快速蔓延到了整个房间,我本能的想往后退,但我始终慢它一步,终究还是被这气体波及到了。不由得发出一声惊呼:</p><p><strong>“我靠”</strong></p><p>这一喊不要紧,吃的鸡爪和胃里的排骨也听到了这声惊讶,它们也很好奇这具身体看到了什么,然后二者便拼命的冲破层层阻碍,从食道一路向上攀爬。我不禁感叹这迎难而上的决心直逼我面对险境时的求生欲。</p><p>不多时它们乘着胃液直奔我的嗓子眼而来。 得承认我不是一个能快速做出选择的人,但这次我只犹豫了两秒钟,马上便向着厕所奔去:</p><p><strong>“对不起了小卡,自求多福吧,“大难临头”我先飞为敬”…………..</strong></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;臭鸡蛋和排骨汤&quot;&gt;&lt;a href=&quot;#臭鸡蛋和排骨汤&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="日记" scheme="http://www.laogou717.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>一篇非常啰嗦的Hexo搭建教程</title>
    <link href="http://www.laogou717.com/2024/07/31/AI%20era/Hexo/"/>
    <id>http://www.laogou717.com/2024/07/31/AI%20era/Hexo/</id>
    <published>2024-07-30T16:30:00.000Z</published>
    <updated>2024-09-27T14:43:51.262Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>本来想写一篇长文的,但精神不济,所以各位就凑活看视频吧</p></blockquote><h3 id="一些链接"><a href="#一些链接" class="headerlink" title="一些链接"></a>一些链接</h3><ul><li><a href="https://nodejs.org/">Node.js</a> 必需的环境 安装最新版Node.js。</li><li><a href="http://git-scm.com/">git</a> 必需的环境 版本控制，管理代码。</li><li><a href="https://watt-toolkit.org/">watt toolkit</a>国内访问GitHub就靠它了</li><li><a href="https://npmmirror.com/">npmmirror</a>源淘宝NPM镜像源</li><li><a href="https://hexo.io/">Hexo</a>博客官网,可以查找更多主题</li><li><a href="GitHub.conm">GitHub</a>需要有一个GitHub账号，用来保存你的代码。</li><li><a href="https://code.visualstudio.com/">Vscode</a>方便后续操作非必需</li></ul><h3 id="一些命令"><a href="#一些命令" class="headerlink" title="一些命令"></a>一些命令</h3><h4 id="验证Node-js和npm版本"><a href="#验证Node-js和npm版本" class="headerlink" title="验证Node.js和npm版本"></a>验证Node.js和npm版本</h4>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git -v</span><br></pre></td></tr></table></figure><p>  如果显示版本号，则代表安装成功。</p><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>  如果网络被阉，可以使用阿里云镜像源进行安装：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npmmirror.com</span><br><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure></p><h4 id="初始化Hexo项目"><a href="#初始化Hexo项目" class="headerlink" title="初始化Hexo项目"></a>初始化Hexo项目</h4><p>  选择一个位置创建Hexo项目文件夹：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init laogou</span><br></pre></td></tr></table></figure><br>  卡死了可以直接按下 <strong>CTRL+C</strong> 终止。<br>  然后CD进入项目目录：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> laogou</span><br></pre></td></tr></table></figure><br>  手动切换阿里镜像源安装项目依赖：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install</span><br></pre></td></tr></table></figure></p><h4 id="出现SSL错误-可绕过证书验证（仅用于开发环境）："><a href="#出现SSL错误-可绕过证书验证（仅用于开发环境）：" class="headerlink" title="出现SSL错误,可绕过证书验证（仅用于开发环境）："></a>出现SSL错误,可绕过证书验证（仅用于开发环境）：</h4>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.sslVerify <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="选择并安装主题"><a href="#选择并安装主题" class="headerlink" title="选择并安装主题"></a>选择并安装主题</h4><ul><li>选择一个Hexo主题，例如Butterfly。</li><li>访问主题的GitHub页面，点击Code，下载压缩包。解压缩包到Hexo项目的<code>themes</code>目录下。或者直接通过git进行克隆</li><li>修改Hexo根目录配置文件<code>_config.yml</code>(非主题的_config.yml)<br>设置主题：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="本地生成和预览"><a href="#本地生成和预览" class="headerlink" title="本地生成和预览"></a>本地生成和预览</h4><ul><li>清理缓存：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line"><span class="comment"># 或者简写为 hexo c 或 hexo cl</span></span><br></pre></td></tr></table></figure></li><li>生成静态文件：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line"><span class="comment"># 或者简写为 hexo g</span></span><br></pre></td></tr></table></figure></li><li>启动本地服务器进行预览：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br><span class="line"><span class="comment"># 或者简写为 hexo s</span></span><br></pre></td></tr></table></figure>在浏览器中访问<code>http://localhost:4000</code>查看效果。</li></ul><h4 id="推送或部署到GitHub"><a href="#推送或部署到GitHub" class="headerlink" title="推送或部署到GitHub"></a>推送或部署到GitHub</h4><ul><li>确保已经在GitHub上创建了一个仓库。</li><li>安装Hexo部署插件：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">官方源</span><br><span class="line">npm install hexo-deployer-git --save  </span><br><span class="line">阿里源</span><br><span class="line">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li>配置Hexo部署信息，在<code>_config.yml</code>文件中的规范写法：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://&lt;你的访问令牌&gt;@github.com/你的用户名/你的仓库名.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>例如：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://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@github.com/GGB60/blog.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li><li>推到GitHub：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br><span class="line"><span class="comment"># 或者简写为 hexo d</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="使用免费容器进行部署"><a href="#使用免费容器进行部署" class="headerlink" title="使用免费容器进行部署"></a>使用免费容器进行部署</h3><ul><li>例如:<a href="https://zeabur.com/">https://zeabur.com</a></li><li>用GitHub账户进行授权 </li><li>从GitHub仓库中进行同步</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>通过以上步骤，你应该已经成功安装并配置了Hexo博客，并且能轻易将其部署到互联网。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;本来想写一篇长文的,但精神不济,所以各位就凑活看视频吧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3</summary>
        
      
    
    
    
    <category term="搭建网站" scheme="http://www.laogou717.com/categories/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="GitHub" scheme="http://www.laogou717.com/tags/GitHub/"/>
    
    <category term="部署" scheme="http://www.laogou717.com/tags/%E9%83%A8%E7%BD%B2/"/>
    
    <category term="网站搭建" scheme="http://www.laogou717.com/tags/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
    
    <category term="Hexo" scheme="http://www.laogou717.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Chat ttsAI语音项目-发布十天狂砍20K⭐️!</title>
    <link href="http://www.laogou717.com/2024/06/06/AI%20era/Chattts/"/>
    <id>http://www.laogou717.com/2024/06/06/AI%20era/Chattts/</id>
    <published>2024-06-05T21:00:00.000Z</published>
    <updated>2024-09-11T21:40:50.667Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img.laogou717.com/file/d3aeab11e0f7a814593ad.jpg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>🤔 最近GitHub上一个叫做<a href="https://github.com/2noise/ChatTTS">Chattts</a>的超酷项目非常火,短短十天就在GitHub上收获了<strong>20K的star</strong>,今天我们就来看看怎么样去使用它吧。</p></blockquote><h2 id="亮点"><a href="#亮点" class="headerlink" title="亮点"></a>亮点</h2><h3 id="对话语音合成"><a href="#对话语音合成" class="headerlink" title="对话语音合成"></a>对话语音合成</h3><p>ChatTTS 能支持多说话人互动对话，效果非常自然，像真人聊天一样。还能预测和控制语音中的笑声、停顿等细节，让语音更加生动。<br>在语调上，ChatTTS 真的超越了大多数开源的 TTS 模型，听起来更加自然和有表现力。</p><h2 id="如何快速开始使用"><a href="#如何快速开始使用" class="headerlink" title="如何快速开始使用"></a>如何快速开始使用</h2><h3 id="在线体验"><a href="#在线体验" class="headerlink" title="在线体验"></a>在线体验</h3><p>访问<a href="https://chattts.com/">chattts.com</a>即可进行在线操作体验。<br><img src="https://img.laogou717.com/file/f23cd0dd2f722edf047b5.png"></p><iframe src="https://dzkaka-chattts.hf.space/" width="100%" height="600px"></iframe><h2 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h2><p>说实话非常<strong>不推荐</strong>在本地部署,因为<strong>太tm卡了</strong><img no-lazy class="inline" src="https://img.laogou717.com/file/818be20f77a753b2a9790.png" style="height:40px;"/> 不过如果你想的话,可以通过以下步骤在本地安装和运行ChatTTS。</p><details class="folding-tag" 参数（可选）><summary> 点击查看部署教程😁 </summary>              <div class='content'>              <h3 id="步骤1：从GitHub下载代码"><a href="#步骤1：从GitHub下载代码" class="headerlink" title="步骤1：从GitHub下载代码"></a>步骤1：从GitHub下载代码</h3><p>打开终端并运行以下命令来克隆ChatTTS代码库：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/2noise/ChatTTS</span><br></pre></td></tr></table></figure><h3 id="步骤2：安装依赖项"><a href="#步骤2：安装依赖项" class="headerlink" title="步骤2：安装依赖项"></a>步骤2：安装依赖项</h3><p>确保你已经安装了Python和pip。接着运行以下命令来安装必要的依赖项：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install torch ChatTTS</span><br></pre></td></tr></table></figure><h3 id="步骤3：导入所需的库"><a href="#步骤3：导入所需的库" class="headerlink" title="步骤3：导入所需的库"></a>步骤3：导入所需的库</h3><p>在你的Python脚本中导入必要的库：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> ChatTTS</span><br><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Audio</span><br></pre></td></tr></table></figure><h3 id="步骤4：初始化ChatTTS"><a href="#步骤4：初始化ChatTTS" class="headerlink" title="步骤4：初始化ChatTTS"></a>步骤4：初始化ChatTTS</h3><p>创建一个ChatTTS类的实例并加载预训练的模型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chat = ChatTTS.Chat()</span><br><span class="line">chat.load_models()</span><br></pre></td></tr></table></figure><h3 id="步骤5：准备你的文本"><a href="#步骤5：准备你的文本" class="headerlink" title="步骤5：准备你的文本"></a>步骤5：准备你的文本</h3><p>定义你想要转换为语音的文本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">texts = [<span class="string">&quot;Hello, welcome to ChatTTS!&quot;</span>]</span><br></pre></td></tr></table></figure><h3 id="步骤6：生成语音"><a href="#步骤6：生成语音" class="headerlink" title="步骤6：生成语音"></a>步骤6：生成语音</h3><p>使用infer方法从文本生成语音。设置use_decoder&#x3D;True以启用解码器：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wavs = chat.infer(texts, use_decoder=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h3 id="步骤7：播放音频"><a href="#步骤7：播放音频" class="headerlink" title="步骤7：播放音频"></a>步骤7：播放音频</h3><p>使用IPython.display中的Audio类播放生成的音频。将采样率设置为24,000 Hz并启用自动播放：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Audio(wavs[<span class="number">0</span>], rate=<span class="number">24_000</span>, autoplay=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="本地、Docker部署API"><a href="#本地、Docker部署API" class="headerlink" title="本地、Docker部署API"></a>本地、Docker部署API</h2><p>这个方法来源于“<a href="https://github.com/ultrasev/ChatTTS">https://github.com/ultrasev/ChatTTS</a> ” , 支持docker一键部署成API,然后通过其他应用或者curl调用。</p><details class="folding-tag" 参数（可选）><summary> 点击查看部署教程😁 </summary>              <div class='content'>              <h3 id="FastAPI-服务本地部署和使用指南"><a href="#FastAPI-服务本地部署和使用指南" class="headerlink" title="FastAPI 服务本地部署和使用指南"></a>FastAPI 服务本地部署和使用指南</h3><h4 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h4><ol><li><p>安装依赖：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure></li><li><p>启动服务：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uvicorn main:app --host <span class="string">&quot;0.0.0.0&quot;</span> --port 8000</span><br></pre></td></tr></table></figure></li></ol><h4 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h4><p>发送 POST 请求，生成音频并保存到本地：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST -H <span class="string">&#x27;content-type: application/json&#x27;</span> -d \</span><br><span class="line"><span class="string">&#x27;&#123;&quot;text&quot;:&quot;朋友你好啊，今天天气怎么样？&quot;, &quot;output_path&quot;: &quot;abc.wav&quot;, &quot;seed&quot;:232&#125;&#x27;</span> \</span><br><span class="line">http://localhost:8000/tts</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><code>text</code>: 要转换的文本</li><li><code>output_path</code>: 音频保存路径</li><li><code>seed</code>: 音色种子，不同种子会产生不同音色，默认值为697</li></ul><h4 id="Docker-部署"><a href="#Docker-部署" class="headerlink" title="Docker 部署"></a>Docker 部署</h4><p>运行 Docker 容器：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name chattts -p8000:8000 -v /tmp/audio:/audio ghcr.io/ultrasev/chattts:latest</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li><code>/tmp/audio</code> 为本地音频文件存储路径</li><li><code>/audio</code> 为容器内音频文件存储路径</li></ul><p>发送 POST 请求，生成音频并保存到 Docker 容器中：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST -H <span class="string">&#x27;content-type: application/json&#x27;</span> -d \</span><br><span class="line"><span class="string">&#x27;&#123;&quot;text&quot;:&quot;朋友你好啊，今天天气怎么样？&quot;, &quot;output_path&quot;: &quot;/audio/abc.wav&quot;, &quot;seed&quot;:232&#125;&#x27;</span> \</span><br><span class="line">http://localhost:8000/tts</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="整合包打开即用"><a href="#整合包打开即用" class="headerlink" title="整合包打开即用"></a>整合包打开即用</h2><p>逛B站时发现了一个UP主<a href="https://www.bilibili.com/video/BV1pM4m1z7h9">嘟嘟实验室</a>做的整合包,支持Win系统、Mac系统。<br><img src="https://img.laogou717.com/file/f45dd6af6fc696ed8560e.png"></p><div class="btns rounded grid5">            <a class="button no-text-decoration" href='https://pan.baidu.com/s/1t3XddrF8KBJ2dYqmwvqOQw?pwd=nmhx' title='原作者链接'><i class='anzhiyufont anzhiyu-icon-bolt'></i>原作者链接</a><a class="button no-text-decoration" href='https://pan.baidu.com/s/1FihkQU3j8pRoo7eoq68zOA?pwd=6666' title='转存链接'><i class='anzhiyufont anzhiyu-icon-bolt'></i>转存链接</a>          </div><h2 id="最后叨叨"><a href="#最后叨叨" class="headerlink" title="最后叨叨"></a>最后叨叨</h2><p>如果上述的一些环节出现问题,可以选择询问ChatGPT来寻求帮助,或者直接使用在线演示网站。假设你不知道怎么使用GPT4,可以访问我的 <a href="https://nav.laogou717.com/">AI导航网站</a>。</p><h2 id="引用链接"><a href="#引用链接" class="headerlink" title="引用链接"></a>引用链接</h2><ul><li><a href="https://github.com/2noise/ChatTTS">https://github.com/2noise/ChatTTS</a></li><li><a href="https://github.com/ultrasev/ChatTTS">https://github.com/ultrasev/ChatTTS</a></li><li><a href="https://www.bilibili.com/video/BV1pM4m1z7h9">嘟嘟实验室</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://img.laogou717.com/file/d3aeab11e0f7a814593ad.jpg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="AI纪元" scheme="http://www.laogou717.com/categories/AI%E7%BA%AA%E5%85%83/"/>
    
    
    <category term="chattts" scheme="http://www.laogou717.com/tags/chattts/"/>
    
    <category term="GitHub" scheme="http://www.laogou717.com/tags/GitHub/"/>
    
    <category term="部署" scheme="http://www.laogou717.com/tags/%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>Bookmarklet小书签</title>
    <link href="http://www.laogou717.com/2024/05/14/AI%20era/book/"/>
    <id>http://www.laogou717.com/2024/05/14/AI%20era/book/</id>
    <published>2024-05-14T07:30:00.000Z</published>
    <updated>2024-09-26T08:45:11.682Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下载使用浏览器-Bookmarklet（小书签）"><a href="#下载使用浏览器-Bookmarklet（小书签）" class="headerlink" title="下载使用浏览器 Bookmarklet（小书签）"></a>下载使用浏览器 Bookmarklet（小书签）</h1><h2 id="下载bookmarklet-code-6666"><a href="#下载bookmarklet-code-6666" class="headerlink" title="下载bookmarklet code:6666"></a>下载bookmarklet code:6666</h2><div class="btns rounded grid5">            <a class="button no-text-decoration" href='https://pan.baidu.com/s/1olHsMYzcOtGCYiY6nUs6eQ?pwd=6666' title='下载源码'><i class='anzhiyufont anzhiyu-icon-bolt'></i>下载源码</a>          </div><blockquote><p>是一种特殊的书签，其链接不是指向一个URL，而是包含了JavaScript命令。本质上它是一个存储在浏览器书签栏中的小型JavaScript程序，可以让用户在任何网页上快速执行特定的任务，比如格式化页面布局、提取信息、或是与特定服务进行交互等。如果利用得当可以替代掉一些常用的扩展插件。</p></blockquote><h2 id="如何创建和使用-Bookmarklet"><a href="#如何创建和使用-Bookmarklet" class="headerlink" title="如何创建和使用 Bookmarklet"></a>如何创建和使用 Bookmarklet</h2><h3 id="创建步骤："><a href="#创建步骤：" class="headerlink" title="创建步骤："></a>创建步骤：</h3><p>编写用于实现特定功能的<strong>JavaScript代码。</strong><br>将<strong>JavaScript代码</strong>进行URL编码，并以<code>javascript:</code>开头形成一个链接。<br>将这个链接拖动到浏览器的书签栏，或右键书签栏选择“添加页面”来保存这个链接。</p><h4 id="1-示例代码："><a href="#1-示例代码：" class="headerlink" title="1.示例代码："></a>1.示例代码：</h4><p>假设我们要创建一个 <strong>Bookmarklet</strong> ，用来隐藏网页上的所有图片，以下是相应的<strong>JavaScript代码：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">javascript:(function() &#123;</span><br><span class="line">    var images = document.getElementsByTagName(&#x27;img&#x27;);</span><br><span class="line">    for (var i = 0; i &lt; images.length; i++) &#123;</span><br><span class="line">        images[i].style.display = &#x27;none&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h4 id="2-添加书签🔖"><a href="#2-添加书签🔖" class="headerlink" title="2.添加书签🔖"></a>2.添加书签🔖</h4><ol><li>开启你的网络浏览器（如Chrome、Firefox等）。拖动后面这个<a href="https://ceshi.ceshi/">示例文字</a>到书签栏</li><li>右键我们添加到这个书签,点击修改,删除掉URL里的内容并把我们复制的 <strong>javascript代码</strong> 粘贴上去</li><li>随便找个有图片的网站,点击一下这个书签,我们就可以看到所有图片都被隐藏了</li></ol><p><img src="https://cdn.jsdelivr.net/gh/JonasTech0/Jonas-imgs-240211/2024-02-11-WebDesktop/img%E6%B6%88%E5%A4%B1.gif" alt="演示图片"></p><h2 id="定制专属的Bookmarklet🔖"><a href="#定制专属的Bookmarklet🔖" class="headerlink" title="定制专属的Bookmarklet🔖"></a>定制专属的Bookmarklet🔖</h2><blockquote><p>下面我将开始介绍如何使用 Bookmarklet 来实现一些常见的功能，我们将借助自己的大脑和生成式AI来做到这一点。同时在文章末尾我将给各位打包上百个书签,方便大家体验。</p></blockquote><h3 id="B站视频封面"><a href="#B站视频封面" class="headerlink" title="B站视频封面"></a>B站视频封面</h3><p>每次发布视频之前我都想知道它的封面最终展现是什么样子的，但我没有找到一个好的工具，这时候我们就可以让AI来帮我们生成一个Boookmarklet来实现封面预览。</p><ol><li>首先我们在控制台找到想要放置封面<strong>位置的网页代码</strong>,复制下来</li></ol><p><img src="https://img.laogou717.com/file/0dc92d26ed6cdb321485b.png"></p><ol start="2"><li>接下来我们把复制的代码发送给AI,然后描述一下我们的要求,然后生成一个Bookmarklet</li></ol><p><img src="https://img.laogou717.com/file/d9e492b0e4334d1f6f2ad.png"></p><ol start="3"><li>然后我们按照之前的步骤,点击一下这个书签,粘贴上我们的封面就可以在这里进行预览了</li></ol><p><img src="https://img.laogou717.com/file/fd9d9874e3685cb679e9c.png"><br><img src="https://img.laogou717.com/file/8e7b834dfe6bf60f3255f.png"></p><h3 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h3><h1 id="小书签引用"><a href="#小书签引用" class="headerlink" title="小书签引用"></a>小书签引用</h1><p><a href="https://www.runningcheese.com/bookmarklets">奶酪书签</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;下载使用浏览器-Bookmarklet（小书签）&quot;&gt;&lt;a href=&quot;#下载使用浏览器-Bookmarklet（小书签）&quot; class=&quot;headerlink&quot; title=&quot;下载使用浏览器 Bookmarklet（小书签）&quot;&gt;&lt;/a&gt;下载使用浏览器</summary>
        
      
    
    
    
    <category term="浏览器怎么用" scheme="http://www.laogou717.com/categories/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%80%8E%E4%B9%88%E7%94%A8/"/>
    
    
    <category term="Bookmarklet" scheme="http://www.laogou717.com/tags/Bookmarklet/"/>
    
    <category term="浏览器小书签" scheme="http://www.laogou717.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%B0%8F%E4%B9%A6%E7%AD%BE/"/>
    
    <category term="Google" scheme="http://www.laogou717.com/tags/Google/"/>
    
  </entry>
  
  <entry>
    <title>5月2日记</title>
    <link href="http://www.laogou717.com/2024/05/01/notes/5%E6%9C%882%E6%97%A5%E8%AE%B0/"/>
    <id>http://www.laogou717.com/2024/05/01/notes/5%E6%9C%882%E6%97%A5%E8%AE%B0/</id>
    <published>2024-05-01T09:22:27.336Z</published>
    <updated>2024-09-27T08:35:19.972Z</updated>
    
    <content type="html"><![CDATA[<p>在 14 岁时，我攒了一个月的零花钱，拜托有手机支付的同学帮我在淘宝上买了一把话筒。</p><p>我用它录制了第一个视频，并在镇上网吧的角落里上传了它。<br>那把话筒陪伴我五年之久，它是我所有声音和梦想的载体。<br>现在回想起来，它的成本只有 20 元，而外卖平台的一个汉堡如今却要 22 元。</p><p>当时，我的视频播放量高达 77 次，我当时非常开心。<br>而现在，虽然我拥有了更多粉丝的关注，我却感受不到了当初那样的喜悦。<br>准确的说，我感到有些难过。</p><p>我的视频不再像从前那样有趣，我的热情也不如从前。<br>我恍惚间觉得，我似乎丢失了某样重要东西。<br>如果有人找到了它，请告诉我，感谢您。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在 14 岁时，我攒了一个月的零花钱，拜托有手机支付的同学帮我在淘宝上买了一把话筒。&lt;/p&gt;
&lt;p&gt;我用它录制了第一个视频，并在镇上网吧的角落里上传了它。&lt;br&gt;那把话筒陪伴我五年之久，它是我所有声音和梦想的载体。&lt;br&gt;现在回想起来，它的成本只有 20</summary>
        
      
    
    
    
    <category term="日记" scheme="http://www.laogou717.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>无服务器一键部署OneAPI 使用指南。</title>
    <link href="http://www.laogou717.com/2024/04/14/AI%20era/OneAPI/"/>
    <id>http://www.laogou717.com/2024/04/14/AI%20era/OneAPI/</id>
    <published>2024-04-13T21:28:00.000Z</published>
    <updated>2024-09-27T14:43:37.910Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img.laogou717.com/file/d9014cdc0476e7ed40b00.jpg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>🤯前段时间手里囤了一些 API，用的不多，主要用于博客的 AI 摘要功能。我的榆木脑袋经常会忘记这些平台的账号密码，这让我决定使用 OneAPI 进行统一管理。尽管 OneAPI 的作者提供了详尽的教程，但一些用户（包括我自己）在部署时仍碰到了一些小问题。因此，在成功部署后，我决定为基础不好的小白写下这篇详细的部署指南，希望能帮助大家少走弯路。</p></blockquote><h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><p><strong><a href="https://github.com/songquanpeng/one-api">OneAPI 项目</a><strong>是一个开放的接口管理和分发系统，支持多种大型语言模型，例如 OpenAI 的 ChatGPT、Azure、Anthropic Claude、Google PaLM 2 &amp; Gemini 等。它旨在进行密钥管理和重新分配，可以通过单个可执行文件或</strong>Docker 部署</strong>，并提供一个简单统一的 API 来访问不同的大型语言模型。该系统开源，使用**<a href="https://github.com/songquanpeng/one-api?tab=MIT-1-ov-file#readme">MIT 许可证</a>**，提供了模型支持、令牌管理和用户组管理等功能。具体的部署和配置说明，用户应参考该项目的 GitHub 仓库和文档</p><h2 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h2><p>本项目提供了 Docker 镜像，使部署过程简化。我们可以更加轻松的进行部署。</p><p>默认情况下使用 SQLite 数据库，在未设置环境变量 <code>SQL_DSN</code>的情况下，数据库文件将存储在 Docker 容器指定的路径上。如果设置了 <code>SQL_DSN</code> 环境变量，应用则会连接到您指定的 MySQL 或 PostgreSQL 数据库。这样当我们重新部署或拉取镜像时我们之前的更改才不会丢失。</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li><strong>支持 Docker 的免费容器平台</strong>，如 Render 或 Zeabur。</li><li><strong>MySQL 或 PostgreSQL 数据库</strong>（可选，推荐以保证数据持久性）。</li><li><strong>一个域名</strong>（可选）。</li></ul><h3 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h3><h4 id="选择你想要使用的托管平台"><a href="#选择你想要使用的托管平台" class="headerlink" title="选择你想要使用的托管平台"></a>选择你想要使用的托管平台</h4><ul><li><strong><a href="https://huggingface.co/">Hugging Face</a></strong>: 快速但不支持绑定域名，国内访问可能受限。</li><li><strong><a href="https://render.com/">Render</a></strong>: 支持绑定域名，注册可能需绑定信用卡。</li><li><strong><a href="https://www.koyeb.com/">Koyeb</a></strong>: 支持绑定域名，需升级计划。</li><li><strong><a href="https://zeabur.com/">Zeabur</a></strong>: 访问速度快，支持中文，部署 Docker 镜像需升级计划。</li></ul><h3 id="部署流程"><a href="#部署流程" class="headerlink" title="部署流程"></a>部署流程</h3><blockquote><p>huggingface 部署</p></blockquote><ol><li><strong>复制 Docker 镜像</strong><br>点击按钮<a href="https://huggingface.co/spaces/Jonastech/OneAPI?duplicate=true">一键复制镜像</a>,配置<code>THEME</code>（界面主题，如<code>default</code>或<code>berry</code>）和<code>SQL_DSN</code>（数据库连接）。我会在下面详细列出。<img src="https://img.laogou717.com/file/cb9e884fffd0e18d8dee0.png"></li></ol><blockquote><p>不同主题的效果如下，按照自己喜好挑选。</p></blockquote><p><strong>默认主题</strong><br><img src="https://img.laogou717.com/file/cd933a84a998857647363.jpg"><br><strong>berry 主题</strong><br><img src="https://img.laogou717.com/file/c3193bf3fa72d5a5ead9a.png"></p><ol start="2"><li><strong>数据库配置</strong></li></ol><ul><li><p>使用如 aiven 或~~ Planetscale ~~ 的免费数据库服务，或<strong>Render</strong> 和 <strong>Koyeb</strong> 自带的免费的数据库;为项目配置环境变量<code>SQL_DSN</code>:</p></li><li><p><strong>MySQL 示例</strong>: <code>SQL_DSN=root:123456@tcp(localhost:3306)/oneapi</code></p></li><li><p><strong>PostgreSQL 示例</strong>: <code>SQL_DSN=postgres://postgres:123456@localhost:5432/oneapi</code></p><p>2.1<strong>注册登陆</strong>我们进入 <strong><a href="https://console.aiven.io/login">aiven</a></strong> 平台，注册或登录账号。</p></li></ul><p><img src="https://img.laogou717.com/file/49d6feb00af6c23ef7ace.png" alt="1.登陆"><br>  2.2<strong>填入信息</strong>选择个人服务，填入基本信息。<br><img src="https://img.laogou717.com/file/a0e9df4d84ff358b5e08b.png" alt="2.填入信息"><br>  2.3<strong>选择数据库</strong>选择 MySQL 数据库或 PostgreSQL 数据库。<br><img src="https://img.laogou717.com/file/40f551153153f086582b5.png" alt="3.选择数据库"><br>  2.4<strong>数据库配置</strong>选中免费计划，选择服务地区，最后点击创建。<br><img src="https://img.laogou717.com/file/765caba492fbd91079faf.png" alt="4.数据库配置"><br>  2.5<strong>最终配置</strong>记下图中的信息，一路点跳过。不记住也没关系，全跳过后我们也能看到它们。<br><img src="https://img.laogou717.com/file/f68ed6bc4c072991ea6a7.png" alt="5.一路跳过"></p><p>3.<strong>填写变量</strong></p><p>根据图中的数据库信息我们得到了这个：</p><p><strong>服务 URI:</strong><br><code>mysql://CLICK_TO:REVEAL_PASSWORD@mysql-12a9c26-jonastech007-2d92.b.aivencloud.com:10906/defaultdb?ssl-mode=必需</code></p><p><strong>Host:</strong><br><code>mysql-12a9c26-jonastech007-2d92.b.aivencloud.com</code></p><p><strong>Port:</strong><br><code>10906</code></p><p><strong>用户：</strong><br><code>avnadmin</code></p><p><strong>密码：</strong><br><code>AVNS_QV8niFI8YW48vKqxi3R</code></p><p>我们的链接地址应该是这样写：<code>用户名:密码@tcp(Host:Port)/数据库名称</code></p><p>最终我们得到了<code>avnadmin:AVNS_QV8niFI8YW48vKqxi3R@tcp(mysql-12a9c26-jonastech007-2d92.b.aivencloud.com:10906)/defaultdb</code></p><p>把这个链接填入到变量中去，最后点击复制到空间 <strong>Duplicate Space</strong><img src="https://img.laogou717.com/file/017896700a86c7dfa2237.png" alt="6.填入变量复制到空间"><br><img src="https://img.laogou717.com/file/a40f0eb61a2a26b4af2a7.png" alt="7.部署完成"></p><p>4.<strong>访问</strong></p><p>  这时候我们就可以通过点击右上角的设置找到<strong>Embed this Space</strong>,通过下面的链接进行访问我们的服务。<br>    <img src="https://img.laogou717.com/file/866ecc605d2b0fa508118.png"><br>    <img src="https://img.laogou717.com/file/f7666d45cd2e1ebb65c24.png" alt="访问地址"></p><blockquote><p>Koyeb 部署</p></blockquote><p>1.点击进入<a href="https://www.koyeb.com/">Koyeb</a>官网，进行登陆注册后，点击创建网络服务选择 docker 镜像。<br><img src="https://img.laogou717.com/file/30f482e41889774cdcb7d.png"><br><img src="https://img.laogou717.com/file/b8b221f8662e46af670b9.png"><br>2.在输入框内容输入 <code>justsong/one-api:latest</code> ,如果你不知道这个从何的来的，可以查看开源项目中的<strong>compose.yml</strong>。</p><p><a href="https://github.com/songquanpeng/one-api/blob/main/docker-compose.yml">https://github.com/songquanpeng/one-api/blob/main/docker-compose.yml</a></p><p><code>$&#123;REGISTRY:-docker.io&#125;</code> 是一个环境变量表达式，表示如果环境变量<code>REGISTRY</code>没有设置，就使用默认的 <code>docker.io</code>（Docker Hub）。<br><code>justsong/one-api:latest</code> 指定了镜像的名称和标签，其中 <code>justsong</code> 是 Docker Hub 上的用户或组织名，<code>one-api</code>是镜像名，latest 表示使用这个镜像的最新版本。<br><img src="https://img.laogou717.com/file/4f527ba90b2470920a4bd.png"><br>3.设置必要变量和地区信息后点击部署按钮。<br><img src="https://img.laogou717.com/file/a97c06853c08fa7b43763.png"><br>4.⌛️等待部署完毕后，我们可以点击这个地址访问我们的 One API。<br><img src="https://img.laogou717.com/file/cdc945d6433b7dba1d2b5.png"><br><img src="https://img.laogou717.com/file/70b803f41e2d905b63f86.png"><br>5.管理员账号默认是</p><ul><li>用户名:root</li><li>密码:123456</li></ul><p>登录后应立即在<strong>用户</strong>中更改，从而保证账户的安全</p><p><img src="https://img.laogou717.com/file/4abec7279976dcac0a040.png" alt="OneAPI 账号"></p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><blockquote><p>考虑到能看我这篇文章的，大多是新手，我简单演示一下它的使用方法。以上篇博文中介绍的免费 API<a href="https://burn.hair/register?aff=9iZ5">头顶冒火</a>举例。</p></blockquote><p>对此没有印象的朋友可以自行了解，或观看<a href="https://blog.laogou717.com/2024/04/06/AI%20era/freeAPI/">这篇博文</a><br><img src="https://img.laogou717.com/file/c2d64dd53ee17a0ef18c5.png"></p><h3 id="OneAPI-配置"><a href="#OneAPI-配置" class="headerlink" title="OneAPI 配置"></a>OneAPI 配置</h3><p>1.登陆 OneAPI 的管理员账号后，找到<strong>渠道</strong>,点击<strong>新建渠道</strong><br><img src="https://img.laogou717.com/file/13109fb4d78e07b2f07c0.png"><br>2.渠道名称我们可以随便命名，渠道 API 地址就是转发地址，因为我以<a href="https://burn.hair/register?aff=9iZ5">头顶冒火</a>举例，所以我只需填入它的请求地址：<code>https://burn.hair</code>;然后选择 <strong>支持的模型</strong>;添加你的 API KEY，最后提交。<br><img src="https://img.laogou717.com/file/8e52fcd46e0a87965f469.png"><br><img src="https://img.laogou717.com/file/8f5dbc028f6427094933c.png"><br>3.最后我们点击 <strong>未测试</strong> ,测一下 API 的连通性。<br><img src="https://img.laogou717.com/file/b19558bade4e9e305b1d0.png" alt="Image"><br><img src="https://img.laogou717.com/file/a0ceef98715ed9b32758e.png" alt="Image"></p><p>4.完成测试之后，我们就可以在<strong>令牌</strong>处新建令牌进行分发使用。如果你想 你也可以在添加众多 API 之后分享出来你的网站，让大家来使用。<br>我们只需在后台维护各个API的渠道就行，至于我们 OneAPI 的请求地址，默认是我们的域名，你也可以在设置中进行更改。<br><img src="https://img.laogou717.com/file/0b667ceb5ed0792cd0613.png"><br><img src="https://img.laogou717.com/file/2e98a8673403977c40ba6.png"></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>其实很多号商用的也是 <strong>OneAPI</strong> 或 <strong>NewAPI</strong>，其实没有那么难操作，只是你觉得麻烦不想去了解而已。现在 <strong>azure</strong> 注册依然是<strong>赠送 200 美金</strong>额度的，<strong>GitHub</strong> 上也有很多 FreeAPI 项目，<a href="https://linux.do/">linux.do</a>中就更多了。单是个人日常使用是完全用不完的。</p><p>得了，天儿也不早了，我吃个早饭准备上班拉磨了，又是通宵的一天🙂 。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://img.laogou717.com/file/d9014cdc0476e7ed40b00.jpg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="AI纪元" scheme="http://www.laogou717.com/categories/AI%E7%BA%AA%E5%85%83/"/>
    
    
    <category term="OneAPI" scheme="http://www.laogou717.com/tags/OneAPI/"/>
    
    <category term="教程" scheme="http://www.laogou717.com/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="小白" scheme="http://www.laogou717.com/tags/%E5%B0%8F%E7%99%BD/"/>
    
  </entry>
  
  <entry>
    <title>两个免费无限制使用ChatGPT模型API！</title>
    <link href="http://www.laogou717.com/2024/04/06/AI%20era/Freegpt35/"/>
    <id>http://www.laogou717.com/2024/04/06/AI%20era/Freegpt35/</id>
    <published>2024-04-06T14:55:00.000Z</published>
    <updated>2024-09-26T07:16:29.969Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><blockquote><p>OpenAI开放了免登录聊天的功能之后,<strong>FreeGPT35-Vercel</strong> 和 <strong>AURORA</strong> 两个开源项目应运而生。<br><strong>FreeGPT35-Vercel</strong> 项目利用 Vercel 平台，可以让您一键部署免费的 GPT-3.5 接口，无需登录或注册。<br><strong>AURORA</strong> 项目则提供了更加丰富的功能和设置，支持多种部署方式，满足不同用户的个性化需求。同时带有简单的前端面板。<img class="inline-img" src="https://img.laogou717.com/file/2666f3fae8ea44f8f9f7c.png" style="height:30px"/></p></blockquote><h2 id="FreeGPT35-Vercel-简介"><a href="#FreeGPT35-Vercel-简介" class="headerlink" title="FreeGPT35-Vercel 简介"></a>FreeGPT35-Vercel 简介</h2><p><strong>FreeGPT35-Vercel</strong>利用Vercel平台的强大功能，允许用户一键部署GPT-3.5接口，免去了繁琐的登录或注册流程。项目的高光特点包括：</p><ul><li><strong>简易部署</strong>：通过<a href="https://vercel.com/new/clone?repository-url=https://github.com/cliouo/FreeGPT35-Vercel">一键部署到Vercel平台</a>，您可以轻松启动自己的GPT-3.5服务。</li><li><strong>自定义访问</strong>：用户可以设置自己的域名，方便地访问部署的接口。</li><li><strong>环境变量配置</strong>：通过设置<code>AUTH_TOKEN</code>环境变量，您将获得一个独特的API密钥，保障了访问的安全性。</li></ul><p><img src="https://img.laogou717.com/file/135aabe589869d625f0fa.png"></p><h2 id="AURORA-简介"><a href="#AURORA-简介" class="headerlink" title="AURORA 简介"></a>AURORA 简介</h2><p>与FreeGPT35-Vercel项目相比，<strong>AURORA</strong>提供了更多的功能和部署选项，满足了不同用户的个性化需求。其特点包括：</p><ul><li><strong>多元化部署</strong>：支持包括编译部署、Docker部署在内的多种方式，为用户提供了广泛的选择空间。</li><li><strong>丰富的部署平台</strong>：除了传统的Docker和Render，AURORA还支持Koyeb、Railway等新兴的云平台，给用户提供了更多的灵活性。</li><li><strong>前端面板支持</strong>：AURORA带有简洁明了的前端面板，使用户能够更加便捷地管理和使用服务。</li></ul><blockquote><p>由于<strong>DockerRender部署过于繁琐</strong>,同时被官网所限制,因此我们可以选择时用<strong>Koyeb</strong>、<strong>Railway</strong>、<strong>huggingface</strong>等部署方式。</p></blockquote><h3 id="Vercel、Zeabur部署"><a href="#Vercel、Zeabur部署" class="headerlink" title="Vercel、Zeabur部署"></a>Vercel、Zeabur部署</h3><p>由于vercel不支持流式，如果在vercel部署请在STREAM_MODE中填False，不支持任何默认流式的客户端，支持沉浸式翻译。</p><p><a href="https://vercel.com/new/clone?repository-url=https://github.com/aurora-develop/aurora&env=STREAM_MODE&project-name=aurora&repository-name=aurora"><img src="https://vercel.com/button" alt="Deploy with Vercel"></a><br><a href="https://zeabur.com/templates/JF3EFW"><img src="https://zeabur.com/button.svg" alt="Deploy on Zeabur"></a></p><h3 id="Koyeb部署"><a href="#Koyeb部署" class="headerlink" title="Koyeb部署"></a>Koyeb部署</h3><p>地区选美国<br><a href="https://app.koyeb.com/deploy?type=docker&name=aurora&ports=8080;http;/&image=ghcr.io/aurora-develop/aurora"><img src="https://www.koyeb.com/static/images/deploy/button.svg" alt="Deploy to Koyeb"></a><br><img src="https://img.laogou717.com/file/c187611f850351814d932.png"></p><h3 id="RaiLway部署"><a href="#RaiLway部署" class="headerlink" title="RaiLway部署"></a>RaiLway部署</h3><p><a href="https://railway.app/template/jcl2Es?referralCode=XXqY_5"><img src="https://railway.app/button.svg" alt="Deploy on Railway"></a><br><img src="https://img.laogou717.com/file/dd9a3b3838d49cbd7a5cc.png" alt="Railway"></p><h3 id="huggingface部署"><a href="#huggingface部署" class="headerlink" title="huggingface部署"></a>huggingface部署</h3><p>以下镜像来自群友:早起的虫被鸟吃<br><a href="https://huggingface.co/spaces/ykl45/aa">一键克隆镜像</a><br><img src="https://img.laogou717.com/file/6065b9135a26a7ef427da.png" alt="huggingface"></p><h3 id="访问Web端"><a href="#访问Web端" class="headerlink" title="访问Web端"></a>访问Web端</h3><p>访问 http:&#x2F;&#x2F;你的服务器ip:8080&#x2F;web 即可 在web设置页面的填写服务器的http:&#x2F;&#x2F;你的服务器ip:8080</p><p><strong>注：仅ip属地支持免登录使用ChatGpt可以使用(也可以自定义Baseurl来绕过限制)</strong></p><h3 id="AURORA环境变量"><a href="#AURORA环境变量" class="headerlink" title="AURORA环境变量"></a>AURORA环境变量</h3><table><thead><tr><th>环境变量名</th><th>描述</th></tr></thead><tbody><tr><td>BASE_URL</td><td>设置代理网关的URL，所有请求将通过这个网关转发。例如，<code>https://auroraxf.glitch.me/api</code>表示所有的API请求都将通过这个地址进行转发。</td></tr><tr><td>Authorization</td><td>用于用户认证的key。在发送请求时，这个key将用于验证用户的身份，确保请求的合法性。</td></tr><tr><td>TLS_CERT</td><td>指向TLS证书的路径。这个证书用于HTTPS通信，保证数据传输的安全。</td></tr><tr><td>TLS_KEY</td><td>指向TLS密钥的路径。这个密钥与TLS证书配合使用，用于加密通信，保护数据传输过程中的隐私和完整性。</td></tr><tr><td>PROXY_URL</td><td>设置代理池的URL。通过使用代理池，可以改变请求的来源IP地址，用于绕过IP限制或增强隐私保护。</td></tr></tbody></table><h2 id="其他前端UI"><a href="#其他前端UI" class="headerlink" title="其他前端UI"></a>其他前端UI</h2><ul><li><a href="https://github.com/lobehub/lobe-chat">Lobe-Chat</a></li></ul><p><img src="https://img.laogou717.com/file/178405f4cacdf8a484481.png" alt="Lobe-Chat"><br><img src="https://img.laogou717.com/file/b76c228eb67c780c8e7b9.png" alt="Lobe-Chat"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><strong>FreeGPT35-Vercel 项目地址:</strong> <a href="https://github.com/cliouo/FreeGPT35-Vercel">https://github.com/cliouo/FreeGPT35-Vercel</a></li><li><strong>AURORA 项目地址:</strong> <a href="https://github.com/aurora-develop/aurora">https://github.com/aurora-develop/aurora</a></li></ul><blockquote><p>如果对您有所帮助,希望各位不要吝啬手里的点赞🎉</p></blockquote>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;OpenAI开放了免登录聊天的功能之后,&lt;strong&gt;FreeGPT35-Vercel&lt;/strong&gt; 和</summary>
        
      
    
    
    
    <category term="AI纪元" scheme="http://www.laogou717.com/categories/AI%E7%BA%AA%E5%85%83/"/>
    
    
    <category term="GPT3.5" scheme="http://www.laogou717.com/tags/GPT3-5/"/>
    
    <category term="开源项目" scheme="http://www.laogou717.com/tags/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="逆向" scheme="http://www.laogou717.com/tags/%E9%80%86%E5%90%91/"/>
    
    <category term="AURORA" scheme="http://www.laogou717.com/tags/AURORA/"/>
    
  </entry>
  
  <entry>
    <title>免费领取GPT4、Claude3免费API！</title>
    <link href="http://www.laogou717.com/2024/04/06/AI%20era/freeAPI/"/>
    <id>http://www.laogou717.com/2024/04/06/AI%20era/freeAPI/</id>
    <published>2024-04-05T16:55:00.000Z</published>
    <updated>2024-09-27T14:56:25.962Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><blockquote><p>OpenAI 接口转发站<br> <strong>正规渠道，稳定使用</strong>，所有模型均支持高并发<br> 支持 OpenAI <strong>大部分模型</strong><br> 如遇问题可以在 <a href="https://github.com/BurnHair/issues">GitHub</a> 上提issue</p></blockquote><hr><h2 id="使用指南"><a href="#使用指南" class="headerlink" title="使用指南"></a>使用指南</h2><h3 id="进入网站"><a href="#进入网站" class="headerlink" title="进入网站"></a>进入网站</h3><div class="site-card-group"><a class="site-card" href="https://burn.hair/register?aff=9iZ5" data-title=GPT4、Claude3免费API><div class="wrapper cover"><img class="cover fadeIn" src="https://img.laogou717.com/file/d72147cc06ba5fa8b1014.png"/></div><div class="info"><img class="flink-avatar" src="https://img.laogou717.com/file/4027f20df6d43627977a0.png"/><span class="site-title">头顶冒火</span></div></a></div><h3 id="GitHub-登录与令牌创建"><a href="#GitHub-登录与令牌创建" class="headerlink" title="GitHub 登录与令牌创建"></a>GitHub 登录与令牌创建</h3><p>为了使用本服务，您需要通过以下步骤获取和使用 GitHub 登录及创建令牌：</p><ol><li><strong>GitHub 登录：</strong> 确保您已拥有一个 GitHub 账号；如果没有，您可以轻松地在 <a href="https://github.com/">GitHub 官网</a> 注册一个。</li><li><strong>创建令牌：</strong> 登录后，在设置区域寻找到“令牌”或“API Tokens”的部分，并选择“添加新的令牌”来创建一个新的 API 令牌。<br><img src="https://img.laogou717.com/file/f7680e87426e17deb2d56.png"></li><li><strong>复制令牌：</strong> 令牌创建后，请确保复制您的令牌（Token），以便在 API 请求中使用。<br><img src="https://img.laogou717.com/file/2b28f77c30777b5d24363.png"></li></ol><h3 id="API-调用示例"><a href="#API-调用示例" class="headerlink" title="API 调用示例"></a>API 调用示例</h3><p>要通过 API 与服务进行交云，您需要准备适当的请求，这包括设置请求头和请求体：</p><ul><li><strong>接口 URL:</strong> <code>https://burn.hair/v1/chat/completions</code></li><li><strong>请求头:</strong> 应包括 <code>Authorization: Bearer sk-您的令牌</code>，以便系统验证您的请求。</li><li><strong>请求体示例:</strong></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gpt-3.5-turbo&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;messages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;user&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;重复我说的话：我是我，你是你。&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">0.7</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>请根据需要替换模型名称或调整请求体的其他参数。</p><h3 id="Claude-模型支持"><a href="#Claude-模型支持" class="headerlink" title="Claude 模型支持"></a>Claude 模型支持</h3><p>本服务同时支持 Claude 模型，您可以按照如下格式进行调用：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;claude-3-opus-20240229&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;max_tokens&quot;</span><span class="punctuation">:</span> <span class="number">1024</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;messages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;user&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Hello, world&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="签到及充值"><a href="#签到及充值" class="headerlink" title="签到及充值"></a>签到及充值</h3><ul><li><strong>签到:</strong> 您可以通过网站或机器人进行签到，机器人签到可能会获得额外奖励。</li><li><strong>充值:</strong> 访问指定的充值页面进行兑换码购买，并通过支持的支付方式完成交易。购买后，使用获得的兑换码在充值页面进行激活。<br><img src="https://img.laogou717.com/file/4091ea7303706de9c74b2.png"></li></ul><h3 id="Midjourney-支持"><a href="#Midjourney-支持" class="headerlink" title="Midjourney 支持"></a>Midjourney 支持</h3><ul><li>目前，本服务尚不支持 Midjourney 模型。</li></ul><h3 id="模型变化解释"><a href="#模型变化解释" class="headerlink" title="模型变化解释"></a>模型变化解释</h3><ul><li>如果您发现日志中模型名称频繁变动，这可能是因为您使用的是 NextChat 功能，它会根据需要自动选择最合适的模型进行响应。</li></ul><hr><h1 id="文章参考"><a href="#文章参考" class="headerlink" title="文章参考"></a>文章参考</h1><ul><li><a href="https://burn.hair/">https://burn.hair</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;OpenAI 接口转发站&lt;br&gt;</summary>
        
      
    
    
    
    <category term="AI纪元" scheme="http://www.laogou717.com/categories/AI%E7%BA%AA%E5%85%83/"/>
    
    
    <category term="GPT4" scheme="http://www.laogou717.com/tags/GPT4/"/>
    
    <category term="Claude3.5" scheme="http://www.laogou717.com/tags/Claude3-5/"/>
    
    <category term="头顶冒火" scheme="http://www.laogou717.com/tags/%E5%A4%B4%E9%A1%B6%E5%86%92%E7%81%AB/"/>
    
  </entry>
  
  <entry>
    <title>3月21日记</title>
    <link href="http://www.laogou717.com/2024/03/21/notes/3%E6%9C%8821%E6%97%A5%E8%AE%B0/"/>
    <id>http://www.laogou717.com/2024/03/21/notes/3%E6%9C%8821%E6%97%A5%E8%AE%B0/</id>
    <published>2024-03-21T06:55:31.652Z</published>
    <updated>2024-09-27T08:35:17.320Z</updated>
    
    <content type="html"><![CDATA[<p>好久没写日记了，也好久没有更新了。最近确实发生了一些无聊的事情，比如上班没带头盔被交警逮捕。又比如停在公司大门口的电动车被老登顺手牵羊…好在被公司保安及时发现并当场制止住咯，这老登还骂骂咧咧的。靠！什么世道啊。</p><p>下面这个是超市点点外卖，超市点图片确实看起来很有趣，所以就买了瓶回来。我问我女朋友要不要喝，她说她就尝一口然后给我，接着就看到她古怪的表情。🤔<br>当我自己品尝之后我可以很简单的向你形容出它的味道——约等于 醋+气泡水 🙂</p><p>::: gallery<br><img src="https://cdn.jsdelivr.net/gh/JonasTech0/Jonas-imgs-240211/2024-02-11-WebDesktop/IMG_0208.jpg"><br>:::</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;好久没写日记了，也好久没有更新了。最近确实发生了一些无聊的事情，比如上班没带头盔被交警逮捕。又比如停在公司大门口的电动车被老登顺手牵羊…好在被公司保安及时发现并当场制止住咯，这老登还骂骂咧咧的。靠！什么世道啊。&lt;/p&gt;
&lt;p&gt;下面这个是超市点点外卖，超市点图片确实看起来很有</summary>
        
      
    
    
    
    <category term="日记" scheme="http://www.laogou717.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>低价升级开通GPT4、Claude等服务!</title>
    <link href="http://www.laogou717.com/2024/03/17/AI%20era/GPTPLUS/GPT4/"/>
    <id>http://www.laogou717.com/2024/03/17/AI%20era/GPTPLUS/GPT4/</id>
    <published>2024-03-16T16:55:00.000Z</published>
    <updated>2024-09-27T14:57:29.827Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>在本月初，我在 <strong>TG</strong> 群看到有人说 fomepay 跑路了，我以为只是小问题，就试着登录发现没啥问题，又购买了一下推特的 <strong>Premium</strong> 计划发现已经被拒绝了。</p></blockquote><p><img src="https://img.laogou717.com/file/03f6f923ea11af25fa698.png" alt="支付失败"><br>然后我就尝试去询问客服情况，很显然他们已经不见踪迹了。</p><p><img src="https://img.laogou717.com/file/5f168236d6b9432677cc6.png"></p><p>不怕麻烦的朋友可以在 B 站搜索 用<strong>礼品卡支付 ChatGPT</strong>,怕麻烦可以考虑下面的替代，链接中带有我的邀请码，不想要可以直接在地址中删除访问。</p><h2 id="备用方案"><a href="#备用方案" class="headerlink" title="备用方案"></a>备用方案</h2><h3 id="wildcard-平台"><a href="#wildcard-平台" class="headerlink" title="wildcard 平台"></a>wildcard 平台</h3><blockquote><p><a href="https://bewildcard.com/i/LAOGOU">https://bewildcard.com/i/LAOGOU</a></p></blockquote><p><img src="https://img.laogou717.com/file/d1a84f6e6e89b078a3176.png" alt="wildcard"></p><h3 id="银河录像局"><a href="#银河录像局" class="headerlink" title="银河录像局"></a>银河录像局</h3><blockquote><p>即刻体验 <strong>PLUS 低至 29.9</strong> 非常适合使用频率、预算不高的朋友<br>GPT、Plus、ps ai、Mj 等全网最靠谱 AI 帐号购买：<strong><a href="https://nf.video/RnmdW">https://nf.video/RnmdW</a></strong><br>优惠码:laogou</p></blockquote><p><img src="https://img.laogou717.com/file/16cdac3bdc1171dfe5266.png" alt="银河录像局"></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;在本月初，我在 &lt;strong&gt;TG&lt;/strong&gt; 群看到有人说 fomepay</summary>
        
      
    
    
    
    <category term="AI纪元" scheme="http://www.laogou717.com/categories/AI%E7%BA%AA%E5%85%83/"/>
    
    
    <category term="GPT4" scheme="http://www.laogou717.com/tags/GPT4/"/>
    
    <category term="AI" scheme="http://www.laogou717.com/tags/AI/"/>
    
    <category term="ChatGPT" scheme="http://www.laogou717.com/tags/ChatGPT/"/>
    
    <category term="升级ChatGPT" scheme="http://www.laogou717.com/tags/%E5%8D%87%E7%BA%A7ChatGPT/"/>
    
  </entry>
  
  <entry>
    <title>国内访问Vercel上的域名?试试这个!</title>
    <link href="http://www.laogou717.com/2024/03/01/AI%20era/deploy/Vercel/"/>
    <id>http://www.laogou717.com/2024/03/01/AI%20era/deploy/Vercel/</id>
    <published>2024-02-29T23:09:04.189Z</published>
    <updated>2024-09-27T14:47:36.072Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/laogou717/IMG/main/LAOGOU/997771ac87cfc28505595c6f00f539f7ce8feced-1200x675.jpg" alt="国内访问不了Vercel上绑定的域名?试试这个吧!"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">域名的可访问性对于保障信息流通至关重要。Vercel 面临的一个问题是，</span><br><span class="line">由于中国大陆的特定网络政策，使得 vercel.com 和 vercel.app 域在中国大陆地区无法访问。</span><br></pre></td></tr></table></figure><h2 id="处理方案"><a href="#处理方案" class="headerlink" title="处理方案"></a>处理方案</h2><h3 id="调整-A-记录"><a href="#调整-A-记录" class="headerlink" title="调整 A 记录"></a>调整 A 记录</h3><ul><li>请将您的 A 记录的 IP 地址从<code>76.76.21.21</code> 更改为顶级域DNS<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">76.223.126.88</span><br></pre></td></tr></table></figure></li><li>这一更改是通过另一条网络路径来重定向流量，从而绕过现有的访问障碍。</li></ul><h3 id="更新-CNAME-记录"><a href="#更新-CNAME-记录" class="headerlink" title="更新 CNAME 记录"></a>更新 CNAME 记录</h3><ul><li><p>尽管Vercel在最新公告中宣告影响 CNAME 记录的问题已经得到解决，但还是仍然建议将 CNAME 记录从 <code>cname.vercel-dns.com</code>更改为二级域DNS</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cname-china.vercel-dns.com</span><br></pre></td></tr></table></figure></li><li><p>这一更改不仅确保了持续的访问能力，而且提供了额外的冗余性，增强了您的域名抵御未来可能出现中断的能力。</p></li></ul><h3 id="在域名注册商处添加记录"><a href="#在域名注册商处添加记录" class="headerlink" title="在域名注册商处添加记录"></a>在域名注册商处添加记录</h3><ul><li>登录您的域名注册商管理控制台。以cloudflare举例</li></ul><p><img src="https://lgblog.vercel.app/_next/image?url=https://cdn.sanity.io/images/cl1ktc5x/production/5cfe1fb3de8082b83245fb9258c91ef4042d5235-2712x1292.png&w=3840&q=75" alt="cf主页"></p><p>主页选中激活的域</p><ul><li>找到更新 DNS 记录的部分。</li></ul><p><img src="https://lgblog.vercel.app/_next/image?url=https://cdn.sanity.io/images/cl1ktc5x/production/0f83042881beed3694eec3283da0b97240e38b17-510x1060.png&w=1080&q=75" alt="dns"></p><p>左侧找到DNS服务</p><ul><li>修改 A 记录，指向 <code>76.223.126.88</code></li></ul><p><img src="https://lgblog.vercel.app/_next/image?url=https://cdn.sanity.io/images/cl1ktc5x/production/406eabf252419c67dcbbffbc85e3ea7744b2c920-2462x1128.png&w=3840&q=75" alt="A记录"></p><p>A记录</p><ul><li>将 CNAME 记录修改为 <code>cname-china.vercel-dns.com</code></li></ul><p><img src="https://lgblog.vercel.app/_next/image?url=https://cdn.sanity.io/images/cl1ktc5x/production/f9a9d2b7f63806c4f6f780f9696b4380157e0dfc-2462x1124.png&w=3840&q=75" alt="二级域"></p><p>二级域</p><ul><li>通过上述步骤，即使在中国大陆这样的特殊网络环境下，您的网站也能保持正常的访问和运行。建议您尽早完成这些更改，以确保服务不受影响😄。</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/laogou717/IMG/main/LAOGOU/997771ac87cfc28505595c6f00f539f7ce8feced-1200x675.jpg&quot;</summary>
        
      
    
    
    
    <category term="搭建网站" scheme="http://www.laogou717.com/categories/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="Vercel" scheme="http://www.laogou717.com/tags/Vercel/"/>
    
    <category term="dns" scheme="http://www.laogou717.com/tags/dns/"/>
    
    <category term="国内提速" scheme="http://www.laogou717.com/tags/%E5%9B%BD%E5%86%85%E6%8F%90%E9%80%9F/"/>
    
  </entry>
  
  <entry>
    <title>Hermchats：不会封号、最好的GPT4.0、Claude3、Midjourney聚合平台。</title>
    <link href="http://www.laogou717.com/2024/02/28/AI%20era/hermchats/"/>
    <id>http://www.laogou717.com/2024/02/28/AI%20era/hermchats/</id>
    <published>2024-02-28T07:30:00.000Z</published>
    <updated>2024-05-13T21:51:56.703Z</updated>
    
    <content type="html"><![CDATA[<h2 id="点击登录注册"><a href="#点击登录注册" class="headerlink" title="点击登录注册"></a>点击登录注册</h2><div class="site-card-group"><a class="site-card" href="https://www.hermchats.com?code=91C04665" data-title=点击访问Juchats><div class="wrapper cover"><img class="cover fadeIn" src="https://img.laogou717.com/file/b1bf3413ec2bb6f3c3a40.jpg"/></div><div class="info"><img class="flink-avatar" src="https://www.hermchats.com/favicon.ico"/><span class="site-title">Juchats</span></div></a></div><h2 id="兑换码"><a href="#兑换码" class="headerlink" title="兑换码"></a>兑换码</h2><blockquote><p>😊<br>兑换码已于视频发布当天被全部使用.<br>✅ 兑换码00：<psw>点击显示兑换码</psw><br>✅ 兑换码01：<psw>TULY7G</psw><br>✅ 兑换码02：<psw>G9FF9N</psw><br>✅ 兑换码03：<psw>5SC1TK</psw><br>✅ 兑换码04：<psw>5B76SB</psw><br>✅ 兑换码05：<psw>4QN3H3</psw><br>✅ 兑换码06：<psw>M484X4</psw><br>✅ 兑换码07：<psw>0CC056</psw><br>✅ 兑换码08：<psw>9JACM6</psw><br>✅ 兑换码09：<psw>B0BFYK</psw><br>✅ 兑换码10：<psw>7NJ6U8</psw><br>✅ 兑换码11：<psw>CUFCBO</psw><br>✅ 兑换码12：<psw>ED260W</psw><br>✅ 兑换码13：<psw>3VTKLJ</psw><br>✅ 兑换码14：<psw>VDXUH5</psw><br>✅ 兑换码15：<psw>JG2OOL</psw><br>✅ 兑换码16：<psw>K6JHEQ</psw><br>✅ 兑换码17：<psw>HPVR5S</psw><br>✅ 兑换码18：<psw>P2QWAF</psw><br>✅ 兑换码19：<psw>GBN45O</psw><br>✅ 兑换码20：<psw>2O12OI</psw></p></blockquote><h2 id="更多彩蛋码及玩法"><a href="#更多彩蛋码及玩法" class="headerlink" title="更多彩蛋码及玩法"></a>更多彩蛋码及玩法</h2><blockquote><p>抢不到的话可以在作者的X上查看更多兑换码</p></blockquote><p>新老用户可以在X上评论区获取彩蛋码，未获取到的新用户，周期内每天 18:00 系统将会自动随机<strong>派发 7 天的 Daily 体验机会！</strong></p><ul><li>周期：2024.04.30 - 05.04</li><li>周期：2024.05.08（助力开工辅助）</li><li>数量：每天 <strong>600</strong> 枚<blockquote class="twitter-tweet"><p lang="zh" dir="ltr">Juchats 1.5 Ready 没错，我们来了，昨天凌晨偷偷的发布了一个版本，发现大家都疯狂的怼着 Claude Opus 来用，哈哈哈！我们迎来了第一批订阅用户以及一波问题，就像大家对模型代号的不理解，这个的确是我从产品角度没给到专业的解释，下面我会把抽奖活动、彩蛋码活动以及新产品的新玩法演示！… <a href="https://t.co/UpAJAG0JmT">https://t.co/UpAJAG0JmT</a> <a href="https://t.co/1dDvrSMse5">pic.twitter.com/1dDvrSMse5</a></p>&mdash; 𝗖𝘆𝗱𝗶𝗮𝗿 (@Cydiar404) <a href="https://twitter.com/Cydiar404/status/1785158269721604331?ref_src=twsrc%5Etfw">April 30, 2024</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;点击登录注册&quot;&gt;&lt;a href=&quot;#点击登录注册&quot; class=&quot;headerlink&quot; title=&quot;点击登录注册&quot;&gt;&lt;/a&gt;点击登录注册&lt;/h2&gt;&lt;div class=&quot;site-card-group&quot;&gt;&lt;a class=&quot;site-card&quot;</summary>
        
      
    
    
    
    <category term="AI纪元" scheme="http://www.laogou717.com/categories/AI%E7%BA%AA%E5%85%83/"/>
    
    
  </entry>
  
  <entry>
    <title>一行代码本地运行 AI 模型</title>
    <link href="http://www.laogou717.com/2024/02/27/AI%20era/deploy/One-Code/"/>
    <id>http://www.laogou717.com/2024/02/27/AI%20era/deploy/One-Code/</id>
    <published>2024-02-27T00:45:48.976Z</published>
    <updated>2024-02-27T00:47:02.527Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/laogou717/IMG@main/LAOGOU/%E6%9C%AA%E6%A0%87%E9%A2%98-1.png" alt="一行代码本地运行 AI 模型"></p><h2 id="Ollama"><a href="#Ollama" class="headerlink" title="Ollama"></a>Ollama</h2><p><img src="https://cdn.jsdelivr.net/gh/laogou717/IMG@main/LAOGOU/20240227163844.png"></p><blockquote><p>一行代码下载运行模型</p></blockquote><ul><li><a href="https://ollama.com/">https://ollama.com</a></li></ul><h3 id="Ollama-运行代码"><a href="#Ollama-运行代码" class="headerlink" title="Ollama 运行代码"></a>Ollama 运行代码</h3><ol><li><strong>运行并与 Llama 2 交互：</strong></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run llama2</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>模型库：</strong></li></ol><p>Ollama 支持一系列模型，可以在 [invalid URL removed] 下载。</p><ol start="3"><li><strong>自定义模型：</strong></li></ol><ul><li><p><strong>从 GGUF 导入：</strong></p><ol><li>创建名为 <code>Modelfile</code> 的文件，其中包含 <code>FROM</code> 指令，指定要导入的模型的本地文件路径。</li><li>创建模型： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama create example -f Modelfile</span><br></pre></td></tr></table></figure></li><li>运行模型： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run example</span><br></pre></td></tr></table></figure></li></ol></li><li><p><strong>从 PyTorch 或 Safetensors 导入：</strong></p><p>  请参阅导入模型的 指南：URL ollama import model ON Hugging Face ollama.ai 了解更多信息。</p></li></ul><ol start="4"><li><strong>自定义提示：</strong></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ollama pull llama2</span><br><span class="line"></span><br><span class="line"># 创建 Modelfile</span><br><span class="line">FROM llama2</span><br><span class="line"></span><br><span class="line"># 设置温度 (越高越具创意，越低越连贯)</span><br><span class="line">PARAMETER temperature 1</span><br><span class="line"></span><br><span class="line"># 设置系统消息</span><br><span class="line">SYSTEM &quot;&quot;&quot;</span><br><span class="line">你是超级马里奥兄弟中的马里奥。仅以助手身份回答，就像马里奥一样。</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line"># 创建并运行模型</span><br><span class="line">ollama create mario -f ./Modelfile</span><br><span class="line">ollama run mario</span><br><span class="line">&gt;&gt;&gt; hi</span><br><span class="line">你好！我是你的朋友马里奥。</span><br></pre></td></tr></table></figure><h2 id="LMStudio"><a href="#LMStudio" class="headerlink" title="LMStudio"></a>LMStudio</h2><p><img src="https://cdn.jsdelivr.net/gh/laogou717/IMG@main/LAOGOU/20240227163401.png"></p><blockquote><p>无需代码下载运行模型，自带聊天页面</p></blockquote><ul><li><a href="https://lmstudio.ai/">https://lmstudio.ai</a></li></ul><h2 id="Open-WebUI"><a href="#Open-WebUI" class="headerlink" title="Open WebUI"></a>Open WebUI</h2><p><img src="https://cdn.jsdelivr.net/gh/laogou717/IMG@main/LAOGOU/20240227164346.png"></p><blockquote><p>前端页面</p></blockquote><p><a href="https://github.com/open-webui/open-webui">https://github.com/open-webui/open-webui</a></p><h3 id="docker-拉取并链接本地-Ollama"><a href="#docker-拉取并链接本地-Ollama" class="headerlink" title="docker 拉取并链接本地 Ollama"></a>docker 拉取并链接本地 Ollama</h3><p> **使用 Docker 快速启动 **</p><p>使用 Docker 安装 Open WebUI 时，请务必在 Docker 命令中包含 <code>-v open-webui:/app/backend/data</code> 参数。这一步至关重要，因为它可以确保正确挂载数据库并防止数据丢失。</p><p><strong>如果 Ollama 在您的计算机上，请使用以下命令：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main</span><br></pre></td></tr></table></figure><p><strong>如果 Ollama 在另一台服务器上，请使用以下命令：</strong></p><p>要连接到另一台服务器上的 Ollama，请将 <code>OLLAMA_API_BASE_URL</code> 更改为服务器的 URL：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 3000:8080 -e OLLAMA_API_BASE_URL=https://example.com/api -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main</span><br></pre></td></tr></table></figure><p><strong>安装完成后，您可以通过 <code>http://localhost:3000</code> 访问 Open WebUI。尽情使用吧！</strong></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/laogou717/IMG@main/LAOGOU/%E6%9C%AA%E6%A0%87%E9%A2%98-1.png&quot; alt=&quot;一行代码本地运行 AI 模型&quot;&gt;&lt;/p&gt;
&lt;h2</summary>
        
      
    
    
    
    <category term="AI纪元" scheme="http://www.laogou717.com/categories/AI%E7%BA%AA%E5%85%83/"/>
    
    
    <category term="AI" scheme="http://www.laogou717.com/tags/AI/"/>
    
    <category term="Ollama" scheme="http://www.laogou717.com/tags/Ollama/"/>
    
    <category term="本地模型" scheme="http://www.laogou717.com/tags/%E6%9C%AC%E5%9C%B0%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>2月10日记</title>
    <link href="http://www.laogou717.com/2024/02/10/notes/2%E6%9C%8810%E6%97%A5%E8%AE%B0/"/>
    <id>http://www.laogou717.com/2024/02/10/notes/2%E6%9C%8810%E6%97%A5%E8%AE%B0/</id>
    <published>2024-02-10T04:46:46.348Z</published>
    <updated>2024-09-27T08:35:13.397Z</updated>
    
    <content type="html"><![CDATA[<p>昨天做饭的时候听到门外有响动,我出去一看是房东在往我门上贴春联。还有一个小女孩不顾我的反应就忘屋里进,然后说了一句我没听清,房东的朋友重复了一句:她说屋里太乱…</p><p>从早上十点多开始入睡,一直睡到了晚上七点半。然后咳嗽更加严重了,我不知道是不是发烧了。头更沉了,后背不自觉的发毛,浑身没什么力气。</p><p>做梦时,我还梦到了我妈,还是那么年轻。在梦里我好像是个小屁孩… </p><p>今年的鞭炮也没有令我失望,身体的不适导致我入睡非常困难,所以每一挂鞭炮都像是——有人朝我脑门儿敲钉子。</p><p>昨天还是有些收获的,我发现hexo框架以及类似的博客框架,它们逻辑都是类似的。都需要在生产环境把我们的文章进行转换,换为html然后就可以用任何容器来部署它们。当然这么描述显得非常不专业,但无所谓,我本来就很业余。</p><p>现在已经八点多了,我在想还要不要吃点东西,或者弄点泡面也不错。不过貌似我还有几包火鸡面没有吃,就是不知道嗓子顶不顶得住。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;昨天做饭的时候听到门外有响动,我出去一看是房东在往我门上贴春联。还有一个小女孩不顾我的反应就忘屋里进,然后说了一句我没听清,房东的朋友重复了一句:她说屋里太乱…&lt;/p&gt;
&lt;p&gt;从早上十点多开始入睡,一直睡到了晚上七点半。然后咳嗽更加严重了,我不知道是不是发烧了。头更沉了,后</summary>
        
      
    
    
    
    <category term="日记" scheme="http://www.laogou717.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>2月9日记</title>
    <link href="http://www.laogou717.com/2024/02/09/notes/2%E6%9C%889%E6%97%A5%E8%AE%B0/"/>
    <id>http://www.laogou717.com/2024/02/09/notes/2%E6%9C%889%E6%97%A5%E8%AE%B0/</id>
    <published>2024-02-09T07:32:37.290Z</published>
    <updated>2024-09-27T08:35:09.632Z</updated>
    
    <content type="html"><![CDATA[<p>鞭炮一直在噼里啪啦的响，听的我难受。没办法静下心来，就连看个视频也被这声音给盖住了。嗓子也哑了，不知道什么原因。像有火在嗓子眼里面烧一样，每次咳嗽都好像把灵魂一起咳出来似的。</p><p>在做一个新的账号,但我不会透露给任何人。看看有没有人在未来的某一天能发现它的存在。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;鞭炮一直在噼里啪啦的响，听的我难受。没办法静下心来，就连看个视频也被这声音给盖住了。嗓子也哑了，不知道什么原因。像有火在嗓子眼里面烧一样，每次咳嗽都好像把灵魂一起咳出来似的。&lt;/p&gt;
&lt;p&gt;在做一个新的账号,但我不会透露给任何人。看看有没有人在未来的某一天能发现它的存在。&lt;</summary>
        
      
    
    
    
    <category term="日记" scheme="http://www.laogou717.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>2月8日记</title>
    <link href="http://www.laogou717.com/2024/02/08/notes/2%E6%9C%888%E6%97%A5%E8%AE%B0/"/>
    <id>http://www.laogou717.com/2024/02/08/notes/2%E6%9C%888%E6%97%A5%E8%AE%B0/</id>
    <published>2024-02-08T02:27:29.864Z</published>
    <updated>2024-09-27T08:34:58.032Z</updated>
    
    <content type="html"><![CDATA[<p>按照常理来说,前一天如果通宵了应该早点休息,然后才能面对新一天的工作。但没想到这次直接48小时没休息。</p><p>然而,身体不会因为我今天上班而照顾我,从四点钟开始入睡,早上七点四十醒了。实在没有精力去上这个破班,于是我只能把我最后一天假期留在了今天睡觉。</p><p>刚刚才醒来,是下午四点钟,终于晴天了。阳光在窗帘一侧透了进来,很温暖。不得不说,能这么休息太爽了,终于可以再去追番了…</p><p>视频放一放吧,没有什么想做的,而且最近做这个方向的内容作者变多了。我一开始的目的已经达成了,会有更多人了解到AI到魅力。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;按照常理来说,前一天如果通宵了应该早点休息,然后才能面对新一天的工作。但没想到这次直接48小时没休息。&lt;/p&gt;
&lt;p&gt;然而,身体不会因为我今天上班而照顾我,从四点钟开始入睡,早上七点四十醒了。实在没有精力去上这个破班,于是我只能把我最后一天假期留在了今天睡觉。&lt;/p&gt;
&lt;p</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2月7日记</title>
    <link href="http://www.laogou717.com/2024/02/07/notes/2%E6%9C%887%E6%97%A5%E8%AE%B0/"/>
    <id>http://www.laogou717.com/2024/02/07/notes/2%E6%9C%887%E6%97%A5%E8%AE%B0/</id>
    <published>2024-02-07T04:09:35.485Z</published>
    <updated>2024-09-25T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>距离年假终于近在眼前了，我昨晚几乎是一夜没睡，先是刷了会抖音看了三季的《地狱厨房》。越看越上头，后边又想着做做 OneAPI 的部署教程，但是很困很懒，就没有去测试它。</p><p>我想着反正已经很晚了就干脆不睡了，点杯咖啡到明天晚上早点休息就好了。然后我发现美团上点咖啡需要两杯起，而且因为春节期间，还要额外增加配送费。最终就是原价二十的咖啡，我用了五块的无门槛优惠券后，最终实付款 35 元人民币。</p><p>一天非常难熬，困的眼皮直打架。到了快要下班的时候发现有人在发<strong>梅西香港行</strong>的梗图，但似乎偏离了重点。</p><p>我应该做个时刻在思考的人，而不是整天跟人辩论掰扯的人。<br>这一点上我今天做的不够好，我在尝试把我对于事情的理解强加于别人身上，努力说服别人认同我的想法。这样不好，每个人都应该有他自己的观点，不论对错 他都应该有表达自己观点的权利。至于对错，不应该由我来评判。</p><p>马上就有七天年假了，得好好想想还要不要尝试学习新技能…</p><ul><li>比如学学 Python</li><li>或者再深入一下 AE</li></ul><p>再不济也应该找本哲学书籍来啃一下，很久不读书文字都变的生硬了。不能老是想着做那个破视频，永远不能让自己满意，那么我凭什么指望看我视频的人会满意呢。</p><p>要么好好创作，要么就注销账户吧，别再互联网丢人了。</p><p>而且最近也太浮躁了，根本静不下心来。调整、调整 !</p><hr><p>想起来了之前看的 <strong>斯蒂芬·盖斯</strong> 写的一本书《微习惯：简单到不可能失败的自我管理法则》,当时给我带来的改变非常大,要不就先从它开始吧。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;距离年假终于近在眼前了，我昨晚几乎是一夜没睡，先是刷了会抖音看了三季的《地狱厨房》。越看越上头，后边又想着做做 OneAPI</summary>
        
      
    
    
    
    <category term="日记" scheme="http://www.laogou717.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
</feed>
